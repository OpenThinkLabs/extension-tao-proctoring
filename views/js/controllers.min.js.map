{"version":3,"sources":["routes.js","../helper/status.js","../component/breadcrumbs.js","../templates/delivery/listBoxActions!tpl","../templates/delivery/listBoxStats!tpl","Delivery/index.js","Delivery/manage.js","../component/extraTime/encoder.js","../component/extraTime/extraTime!tpl","../component/extraTime/extraTime.js","../templates/delivery/deliveryLink!tpl","../templates/delivery/statusFilter!tpl","Delivery/monitoring.js","Delivery/testTakers.js","../../taoQtiTest/testRunner/resumingStrategy/keepAfterResume.js","../templates/deliveryServer/authorizationSuccess!tpl","../templates/deliveryServer/authorizationListBoxActions!tpl","DeliveryServer/awaiting.js","Irregularity/index.js","../component/dateRange/form!tpl","../component/dateRange.js","../component/history/historyTable.js","Reporting/history.js","Tools/pauseActiveExecutions.js"],"names":["define","Reporting","actions","sessionHistory","Irregularity","index","DeliverySelection","Monitor","Tools","pauseActiveExecutions","_","__","getStatus","statusName","_status","getStatusByCode","statusCode","find","code","verifyTestTaker","testTakerData","actionName","formatted","id","label","firstname","lastname","status","state","allowed","can","reason","getStatuses","map","el","_awaiting","_authorized","_inprogress","_paused","_completed","_terminated","_canceled","awaiting","authorize","pause","terminate","report","print","time","authorized","inprogress","paused","completed","terminated","canceled","STATUS_AUTHORIZED","STATUS_INPROGRESS","STATUS_PAUSED","STATUS_COMPLETED","STATUS_TERMINATED","breadcrumbs","$container","crumbs","data","renderTo","replace","cls","hb","template","Handlebars","depth0","helpers","partials","this","compilerInfo","merge","stack1","helper","options","buffer","functionType","escapeExpression","helperMissing","call","hash","program1","periodStart","periodEnd","self","showProperties","inverse","noop","fn","program","locked","inProgress","$","loadingBar","listBoxFactory","encode","feedback","bulkActionPopup","cascadingComboBox","breadcrumbsFactory","actionsTpl","statsTpl","cssScope","taoProctoringCtlr","start","format","transform","result","delivery","props","properties","tplData","stats","awaitingApproval","html","content","getDeliveryLabel","deliveries","update","listBox","stop","refresh","setLoading","ajax","url","serviceUrl","cache","dataType","type","done","deliveryId","selection","deliveryExecutions","testTaker","firstName","lastName","resourceType","categoriesSelector","categoriesDefinitions","categories","allowedResources","on","_url","testCenter","testCenterId","execution","pluck","error","response","messageContext","unprocessed","success","forEach","uri","count","length","join","warning","encodeHtml","list","title","textEmpty","textNumber","textLoading","width","countRenderer","e","pauseUrl","stopPropagation","preventDefault","get","res","inProgressExecs","isPlainObject","isArray","filter","info","dialog","proctorDeliveryIndexCtlr","$list","dataset","assignUrl","removeUrl","monitoringUrl","request","message","testtaker","datatable","remove","empty","available","loading","tools","icon","action","window","location","href","massAction","autoRender","autoDestroy","onOkBtn","selectable","model","timeEncoder","encodeExtraTime","extraTime","consumedTime","pattern","unit","encoded","Math","min","each","program2","deniedResources","program7","remainingStr","program3","extraTimeStr","program5","program8","program10","component","hider","extraTimeTpl","extraTimeFactory","config","initConfig","defaults","_defaults","timeUnit","resource","remaining","parseFloat","setTemplate","checkInputError","value","$time","val","trim","Number","isNaN","show","$error","$ok","attr","focus","removeAttr","hide","submit","trigger","$cmp","modal","cancel","select","getElement","reduce","max","addClass","destroy","event","keyCode","$btn","target","closest","control","removeClass","init","statuses","extraTimePopup","deliveryLinkTpl","statusFilterTpl","extraTimeUnit","getExecutionData","start_time","authorise","execBulkAction","sel","authoriseUrl","terminateUrl","reportUrl","open","JSON","stringify","terminateAndIrregularity","buttons","close","showHistory","urlParams","session","printReport","printResults","timeHandling","_selection","listSessions","$content","extraTimeUrl","canDo","what","verifyDelivery","deliveryName","isObject","text","test_taker_first_name","test_taker_last_name","timer","consumedExtraTime","remaining_time","allowedDeliveries","forbiddenDeliveries","checkedDelivery","push","actionTitle","cb","askForReason","reasonRequired","isFunction","buildStatusFilter","setTagUsage","applyTags","defaultTag","$filter","appendTo","children","tagWaringBlock","timeout","setInitialFilters","now","Date","nowStr","getFullYear","getMonth","slice","getDate","statusFilterHandler","$el","select2","dropdownAutoWidth","placeholder","minimumResultsForSearch","Infinity","allowClear","actionButtons","actionList","extraFields","context","isManageable","timeHandlingButton","printReportButton","manageUrl","serviceAllUrl","highlightRows","css","sortable","row","extraField","filterable","customFilter","callback","datepicker","dateFormat","onSelect","selectedDate","first","inline","onClose","disabled","refinedValue","parseInt","isFinite","hidden","online","progress","newDataset","isUndefined","v","uniq","forIn","filterStrategy","filterSelector","sortorder","sortby","proctorDeliveryAssignCtlr","managerUrl","assign","sessionStateFactory","_start","_interval","TypeError","setInterval","setLocalStorageData","getLocalStorageData","_accuracy","_stop","clearInterval","_reset","clearLocalStorage","_init","accuracy","localStorage","setItem","_storageKey","getItem","parse","removeItem","sessionState","reset","restart","getDuration","cancelable","dialogAlert","polling","keepAfterResume","dialogConfirm","authSuccessTpl","listBoxActionsTpl","refreshPolling","awaitingAuthorizationCtlr","exit","returnUrl","isAuthorizedUrl","deliveryExecution","runDeliveryUrl","boxes","deliveryLabel","deliveryInit","cancelUrl","hasClass","async","reject","resolve","interval","autoStart","IrregularityCtlr","$form","from","to","params","exportUrl","fileDownload","successCallback","failCallback","jqXHR","parseJSON","Error","end","formTpl","dateRangeFactory","dateRange","getStart","getEnd","$periodStart","$periodEnd","$filterBtn","autoSize","change","renderDetails","details","historyTableFactory","historyTable","$element","is","service","sortBy","sortOrder","concat","taoProctoringReportCtlr","sessions","detailedHistory","tool","detailed","render","doPause","route","loaded","msg"],"mappings":"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","file":"routes.js.map","sourcesContent":["define('taoProctoring/controller/routes',{\n    'Reporting' : {\n        'actions' : {\n            'sessionHistory' : 'controller/Reporting/history'\n        }\n    },\n    'Irregularity' : {\n        'actions' : {\n            'index' : 'controller/Irregularity/index'\n        }\n    },\n    'DeliverySelection' : {\n        'actions' : {\n            'index' : 'controller/Delivery/index'\n        }\n    },\n    'Monitor' : {\n        'actions' : {\n            'index' : 'controller/Delivery/monitoring'\n        }\n    },\n    'Tools' : {\n        'actions' : {\n            'pauseActiveExecutions' : 'controller/Tools/pauseActiveExecutions'\n        }\n    }\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoProctoring/helper/status',['lodash', 'i18n'], function(_, __){\n    'use strict';\n    var _awaiting = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusAwaiting',\n        _authorized = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusAuthorized',\n        _inprogress = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusActive',\n        _paused = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusPaused',\n        _completed = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusFinished',\n        _terminated = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusTerminated',\n        _canceled = 'http://www.tao.lu/Ontologies/TAODelivery.rdf#DeliveryExecutionStatusCanceled';\n\n    var _status = {\n        awaiting : {\n            code : _awaiting,\n            label : __('Awaiting'),\n            can : {\n                authorize : true,\n                pause : __('not in progress'),\n                terminate : true,\n                report : true,\n                print : __('not finished'),\n                time : true\n            }\n        },\n        authorized : {\n            code : _authorized,\n            label : __('Authorized but not started'),\n            can : {\n                authorize : __('already authorized'),\n                terminate : true,\n                report : true,\n                pause : __('not started'), //not in progress\n                print : __('not finished'),\n                time : true\n            }\n        },\n        inprogress : {\n            code : _inprogress,\n            label : __('In Progress'),\n            can : {\n                authorize : __('already authorized'),\n                pause : true,\n                terminate : true,\n                report : true,\n                print : __('not finished'),\n                time : true\n            }\n        },\n        paused : {\n            code : _paused,\n            label : __('Paused'),\n            can : {\n                authorize : __('is paused'),\n                pause : __('is already paused'),\n                terminate : true,\n                report : true,\n                print : __('not finished'),\n                time : true\n            }\n        },\n        completed : {\n            code : _completed,\n            label : __('Completed'),\n            can : {\n                authorize : __('is completed'),\n                pause : __('is completed'),\n                terminate : __('is completed'),\n                report : true,\n                print: true,\n                time : true\n            }\n        },\n        terminated : {\n            code : _terminated,\n            label : __('Terminated'),\n            can : {\n                authorize : __('is terminated'),\n                pause : __('is terminated'),\n                terminate : __('is terminated'),\n                report : true,\n                print: true,\n                time : true\n            }\n        },\n        canceled : {\n            code : _canceled,\n            label : __('Canceled'),\n            can : {\n                authorize : __('is canceled'),\n                pause : __('is canceled'),\n                terminate : __('is canceled'),\n                report : true,\n                print: __('is canceled'),\n                time : true\n            }\n        }\n    };\n\n    /**\n     * Get the status model from its name\n     * @param {string} statusName\n     * @returns {object}\n     */\n    function getStatus(statusName){\n        return _status[statusName];\n    }\n\n    /**\n     * Get the status model from its code\n     * @param {string} statusCode\n     * @returns {object}\n     */\n    function getStatusByCode(statusCode){\n        return _.find(_status, {code : statusCode});\n    }\n\n    /**\n     * Verify and reformat test taker data for the execBulkAction's need\n     * @param {Object} testTakerData\n     * @param {String} actionName\n     * @returns {Object}\n     */\n    function verifyTestTaker(testTakerData, actionName){\n        var formatted = {\n            id : testTakerData.id,\n            label : testTakerData.firstname + ' ' + testTakerData.lastname\n        };\n        var status = _status.getStatusByCode(testTakerData.state.status);\n        if(status){\n            formatted.allowed = (status.can[actionName] === true);\n            if(!formatted.allowed){\n                formatted.reason = status.can[actionName];\n            }\n        }\n        return formatted;\n    }\n\n    /**\n     * Get status model mappings formatted\n     * @returns {Array}\n     */\n    function getStatuses() {\n        return _.map(_status, function (el) {\n            return {code: el.code, label: el.label};\n        });\n    }\n\n    return {\n        getStatuses : getStatuses,\n        getStatus : getStatus,\n        getStatusByCode : getStatusByCode,\n        verifyTestTaker : verifyTestTaker,\n        STATUS_AUTHORIZED : _authorized,\n        STATUS_INPROGRESS : _inprogress,\n        STATUS_PAUSED : _paused,\n        STATUS_COMPLETED : _completed,\n        STATUS_TERMINATED : _terminated\n    };\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoProctoring/component/breadcrumbs',['ui/breadcrumbs'], function(breadcrumbs){\n    \n    /**\n     * Wrap the generic breadcrumbs component into a very specialized\n     * \n     * @param {JQyery} $container\n     * @param {Array} [crumbs]\n     * @returns {unresolved}\n     */\n    return function breadcrumbFactory($container, crumbs){\n        return breadcrumbs({\n            breadcrumbs : crumbs || $container.data('breadcrumbs'),\n            renderTo: $container.find('.header'),\n            replace: true,\n            cls : 'action-bar horizontal-action-bar'\n        });\n    };\n});\n\n\n","\ndefine('tpl!taoProctoring/templates/delivery/listBoxActions', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<span class=\\\"listbox-actions\\\">\\n    <span class=\\\"action pause\\\" data-delivery=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"icon-pause\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Pause\", options) : helperMissing.call(depth0, \"__\", \"Pause\", options)))\n    + \"\\n    </span>\\n    <span class=\\\"action play\\\">\\n        <span class=\\\"icon-play\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Monitor\", options) : helperMissing.call(depth0, \"__\", \"Monitor\", options)))\n    + \"\\n    </span>\\n</span>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoProctoring/templates/delivery/listBoxStats', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n<ul class=\\\"plain listbox-properties\\\">\\n    <li>\\n        <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start\", options) : helperMissing.call(depth0, \"__\", \"Start\", options)))\n    + \"</label>: \";\n  if (helper = helpers.periodStart) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.periodStart); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </li>\\n    <li>\\n        <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"End\", options) : helperMissing.call(depth0, \"__\", \"End\", options)))\n    + \"</label>: \";\n  if (helper = helpers.periodEnd) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.periodEnd); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </li>\\n</ul>\\n\";\n  return buffer;\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showProperties), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n<p class=\\\"listbox-stats\\\">\\n    <span class=\\\"icon-lock\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.locked) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.locked); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"icon-play\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.inProgress) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.inProgress); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"icon-pause\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.paused) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.paused); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n</p>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/index',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'util/encode',\n    'ui/feedback',\n    'ui/bulkActionPopup',\n    'ui/cascadingComboBox',\n    'taoProctoring/helper/status',\n    'taoProctoring/component/breadcrumbs',\n    'tpl!taoProctoring/templates/delivery/listBoxActions',\n    'tpl!taoProctoring/templates/delivery/listBoxStats'\n], function (_, $, __, helpers, loadingBar, listBoxFactory, encode, feedback, bulkActionPopup, cascadingComboBox, _status, breadcrumbsFactory, actionsTpl, statsTpl) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-index';\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start: function start() {\n            var $container = $(cssScope);\n            var list = $container.data('list');\n            var deliveries = format(list);\n            var crumbs = $container.data('breadcrumbs');\n            var categories = $container.data('categories');\n            var testCenterId = $container.data('testcenter');\n            var serviceUrl = helpers._url('deliveries', 'Delivery', 'taoProctoring', {testCenter: testCenterId});\n            var listBox = listBoxFactory({\n                title: __(\"Sessions\"),\n                textEmpty: __(\"No sessions available\"),\n                textNumber: __(\"Available\"),\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true,\n                list: list,\n                width: 12,\n\n                // discard the \"all sessions\" box from available count\n                countRenderer: function (count) {\n                    return count - 1;\n                }\n            });\n\n            // format each delivery descriptor to be displayed in a box, build a map of deliveries\n            function format(data) {\n                return _.transform(data, function (result, delivery) {\n                    var props = delivery.properties;\n                    var tplData = {\n                        locked: delivery.stats.awaitingApproval,\n                        inProgress: delivery.stats.inProgress,\n                        paused: delivery.stats.paused\n                    };\n\n                    if (props && props.periodStart && props.periodEnd) {\n                        tplData.showProperties = true;\n                        tplData.periodStart = props.periodStart;\n                        tplData.periodEnd = props.periodEnd;\n\n                        //add a special class for boxes that have more information to display\n                        delivery.cls = 'has-properties-displayed';\n                    }\n                    delivery.html = actionsTpl({\n                        id: delivery.id\n                    });\n                    delivery.content = statsTpl(tplData);\n\n                    result[delivery.id] = delivery;\n                }, {});\n            }\n\n            // get the label of a delivery from its ID\n            function getDeliveryLabel(id) {\n                return deliveries[id] && deliveries[id].label;\n            }\n\n            // update the index from a JSON array\n            function update(data) {\n                deliveries = format(data);\n                listBox.update(data);\n                loadingBar.stop();\n            }\n\n            // refresh the index\n            function refresh() {\n                loadingBar.start();\n                listBox.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType: 'json',\n                    type: 'GET'\n                }).done(function (data) {\n                    update(data);\n                });\n            }\n\n            // request a pause fo the selected delivery executions\n            function pause(deliveryId, selection, deliveryExecutions) {\n\n                var allowed = _.map(selection, function (data) {\n                    return {\n                        id: data.id,\n                        label: data.testTaker.firstName + ' ' + data.testTaker.lastName\n                    };\n                });\n\n                bulkActionPopup({\n                    renderTo: $container,\n                    actionName: __('Pause Session'),\n                    reason: true,\n                    resourceType: 'test taker',\n                    categoriesSelector: cascadingComboBox({\n                        categoriesDefinitions: categories.pause.categoriesDefinitions,\n                        categories: categories.pause.categories\n                    }),\n                    allowedResources: allowed\n                }).on('ok', function (reason) {\n                    //execute callback\n                    $.ajax({\n                        url: helpers._url('pauseExecutions', 'Delivery', 'taoProctoring'),\n                        data: {\n                            delivery: deliveryId,\n                            testCenter: testCenterId,\n                            execution: _.pluck(selection, 'id'),\n                            reason: reason\n                        },\n                        dataType: 'json',\n                        type: 'POST',\n                        error: function () {\n                            loadingBar.stop();\n                        }\n                    }).done(function (response) {\n                        var messageContext, unprocessed;\n\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            feedback().success('Selected deliveries successfully paused');\n                            refresh();\n                        } else {\n                            messageContext = '';\n                            if (response) {\n                                unprocessed = {};\n                                _.forEach(response.unprocessed, function (id) {\n                                    var execution = deliveryExecutions[id];\n                                    var uri = execution && execution.delivery && execution.delivery.uri;\n                                    if (uri) {\n                                        unprocessed[uri] = (unprocessed[uri] || 0) + 1;\n                                    }\n                                });\n\n                                unprocessed = _.map(unprocessed, function (count, uri) {\n                                    if (count > 1) {\n                                        return __('%d sessions of the delivery %s have not been paused', count, getDeliveryLabel(uri));\n                                    }\n                                    return __('A session of the delivery %s have not been paused', getDeliveryLabel(uri));\n                                });\n\n                                if (unprocessed.length) {\n                                    messageContext += '<br>' + unprocessed.join('<br>');\n                                }\n                                if (response.error) {\n                                    messageContext += '<br>' + encode.html(response.error);\n                                }\n                            }\n                            feedback().warning(__('Something went wrong ...') + '<br>' + messageContext, {encodeHtml: false});\n                        }\n                    });\n                });\n            }\n\n            breadcrumbsFactory($container, crumbs);\n\n            $container.on('click', '.pause', function (e) {\n\n                var deliveryId = $(this).data('delivery');\n                var pauseUrl =\n                    helpers._url('deliveryExecutions', 'Monitor', 'taoProctoring', (deliveryId === 'all') ? {} : {delivery: deliveryId});\n\n                //prevent clicking the parent link that goes to the monitoring screen\n                e.stopPropagation();\n                e.preventDefault();\n\n                //get list of all test taker for the selected delivery\n                $.get(pauseUrl, function (res) {\n                    var deliveryExecutions = {};\n                    var inProgressExecs;\n\n                    if (_.isPlainObject(res) && _.isArray(res.data)) {\n                        inProgressExecs = _.filter(res.data, function (data) {\n                            deliveryExecutions[data.id] = data;\n                            return (data.state && data.state.status === _status.getStatus('inprogress').code);\n                        });\n\n                        if (inProgressExecs.length) {\n                            pause(deliveryId, inProgressExecs, deliveryExecutions);\n                        } else {\n                            feedback().info(__('There is no delivery in progress'));\n                        }\n                    }\n                });\n            });\n\n            if (!list) {\n                refresh();\n            } else {\n                loadingBar.stop();\n            }\n        }\n    };\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    return taoProctoringCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/manage',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-manager';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var assignUrl = helpers._url('testTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var removeUrl = helpers._url('removeTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var serviceUrl = helpers._url('deliveryTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var monitoringUrl = helpers._url('monitoring', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // request the server with a selection of test takers\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            testtaker: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            // request the server to remove the selected test takers\n            var remove = function(selection) {\n                request(removeUrl, selection, __('Test takers have been removed'));\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No assigned test takers'),\n                        available: __('Assigned test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'refresh',\n                        icon: 'reset',\n                        title: __('Refresh the page'),\n                        label: __('Refresh'),\n                        action: function() {\n                            $list.datatable('refresh');\n                        }\n                    }, {\n                        id: 'back',\n                        icon: 'preview',\n                        title: __('Return to the session monitoring'),\n                        label: __('Monitoring'),\n                        action: function() {\n                            window.location.href = monitoringUrl;\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign more test takers to this session'),\n                        label: __('Add test takers'),\n                        action: function() {\n                            window.location.href = assignUrl;\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected test takers from the session'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be removed from this session. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the test taker from the session'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The test taker will be removed from this session. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'identifier',\n                        label: __('Identifier')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/extraTime/encoder',[\n    'core/format',\n    'core/encoder/time'\n], function (format, timeEncoder) {\n    'use strict';\n\n    /**\n     * Encodes the extra time in a human readable way\n     * @param {Number} extraTime - The extra time to encode\n     * @param {Number} consumedTime - The already consumed time\n     * @param {String} [pattern] - The display pattern used when no time is consumed (default: %s)\n     * @param {Number} [unit] - The time unit\n     * @returns {String}\n     */\n    function encodeExtraTime(extraTime, consumedTime, pattern, unit) {\n        var encoded = '';\n\n        pattern = pattern || '%s';\n        unit = unit || 1;\n\n        if (extraTime) {\n            if (consumedTime) {\n                encoded = timeEncoder.encode(Math.min(consumedTime, extraTime)) + '/' + timeEncoder.encode(extraTime);\n            } else {\n                encoded = format(pattern, extraTime / unit);\n            }\n\n            encoded = ' +' + encoded;\n        }\n\n        return encoded;\n    }\n\n    return encodeExtraTime;\n});\n\n","\ndefine('tpl!taoProctoring/component/extraTime/extraTime', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n    <div class=\\\"multiple\\\">\\n        <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The action will be applied to the following session\", options) : helperMissing.call(depth0, \"__\", \"The action will be applied to the following session\", options)))\n    + \":</p>\\n        <ul class=\\\"plain applicables\\\">\\n            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.allowedResources), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n    </div>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.deniedResources)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <li data-resource=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"resource-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.remainingStr), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.extraTimeStr), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </li>\\n            \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"remaining\\\">\";\n  if (helper = helpers.remainingStr) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.remainingStr); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"time\\\">(\";\n  if (helper = helpers.extraTimeStr) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.extraTimeStr); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \")</span>\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n    <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"However, the action will not be applied to the following sessions\", options) : helperMissing.call(depth0, \"__\", \"However, the action will not be applied to the following sessions\", options)))\n    + \":</p>\\n    <ul class=\\\"plain no-applicables\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.deniedResources), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </ul>\\n    \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <li data-resource=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <span class=\\\"resource-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            <span class=\\\"reason\\\">(\";\n  if (helper = helpers.reason) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.reason); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \")</span>\\n        </li>\\n        \";\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The action cannot be applied, no eligible sessions found\", options) : helperMissing.call(depth0, \"__\", \"The action cannot be applied, no eligible sessions found\", options)))\n    + \"</p>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"bulk-action-popup\\\">\\n    <h2 class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Action\", options) : helperMissing.call(depth0, \"__\", \"Action\", options)))\n    + \": \";\n  if (helper = helpers.actionName) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.actionName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h2>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.allowedResources)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(10, program10, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    <div class=\\\"form\\\">\\n        <p>\\n            <label for=\\\"input-extra-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Extra time\", options) : helperMissing.call(depth0, \"__\", \"Extra time\", options)))\n    + \":</label>\\n            <input type=\\\"text\\\" id=\\\"input-extra-time\\\" data-control=\\\"time\\\" value=\\\"\";\n  if (helper = helpers.time) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.time); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" maxlength=\\\"4\\\" size=\\\"4\\\" />\\n            <label for=\\\"input-extra-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"minutes\", options) : helperMissing.call(depth0, \"__\", \"minutes\", options)))\n    + \"</label>\\n        </p>\\n    </div>\\n    <p>\\n        <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Note\", options) : helperMissing.call(depth0, \"__\", \"Note\", options)))\n    + \":</strong>\\n        <em>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"the already granted time will be replaced by the new value\", options) : helperMissing.call(depth0, \"__\", \"the already granted time will be replaced by the new value\", options)))\n    + \"</em>\\n    </p>\\n\\n    <div class=\\\"actions\\\">\\n        <div class=\\\"feedback-error small hidden\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The extra time must be a number\", options) : helperMissing.call(depth0, \"__\", \"The extra time must be a number\", options)))\n    + \"</div>\\n        <button class=\\\"btn btn-info small action done\\\" data-control=\\\"done\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"OK\", options) : helperMissing.call(depth0, \"__\", \"OK\", options)))\n    + \"</button>\\n        <a href=\\\"#\\\" class=\\\"btn action cancel\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"cancel the action\", options) : helperMissing.call(depth0, \"__\", \"cancel the action\", options)))\n    + \"\\\" data-control=\\\"cancel\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"cancel\", options) : helperMissing.call(depth0, \"__\", \"cancel\", options)))\n    + \"</a>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/extraTime/extraTime',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/encoder/time',\n    'ui/component',\n    'ui/hider',\n    'taoProctoring/component/extraTime/encoder',\n    'tpl!taoProctoring/component/extraTime/extraTime',\n    'ui/modal'\n], function ($, _, __, timeEncoder, component, hider, encodeExtraTime, extraTimeTpl) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        unit: 60,           // default time unit is minutes\n        deniedResources: []\n    };\n\n    /**\n     * Creates a form that manage the extra time allowed to test takers\n     *\n     * @param {Object} config\n     * @param {String} config.actionName - the action name (use in the title text)\n     * @param {Array} config.allowedResources - list of allowed resources to be displayed\n     * @param {Array} [config.deniedResources] - list of denied resources to be displayed\n     * @param {Number} [config.unit] - the time is stored in seconds, but can be handled in other time units, by default this is minutes (60)\n     * @fires cancel when the component is closed without validation\n     * @fires ok when the ok button is clicked\n     */\n    function extraTimeFactory(config) {\n        var initConfig = _.defaults(config || {}, _defaults);\n        var timeUnit = initConfig.unit || _defaults.unit;\n\n        _.forEach(initConfig.allowedResources, function(resource) {\n            var remaining = parseFloat(resource.remaining) || 0;\n            var extraTime = parseFloat(resource.extraTime);\n            var consumedTime = parseFloat(resource.consumedTime);\n\n            if (remaining) {\n                resource.remainingStr = timeEncoder.encode(remaining);\n            }\n\n            resource.extraTimeStr = encodeExtraTime(extraTime, consumedTime, __('%s minutes more'), timeUnit);\n        });\n\n        return component()\n            .setTemplate(extraTimeTpl)\n            .on('render', function () {\n                var self = this;\n                var $cmp = this.getElement();\n                var $time = $cmp.find('[data-control=\"time\"]');\n                var $error = $cmp.find('.feedback-error');\n                var $ok = $cmp.find('[data-control=\"done\"]');\n\n                /**\n                 * Validate the input time\n                 * @returns {Boolean}\n                 */\n                function checkInputError() {\n                    var value = $time.val().trim();\n\n                    // use Number() instead of parseInt/parseFloat to prevent number with text like \"10$$\" to be\n                    // converted to number, as we need to avoid that case\n                    var time = Number(value);\n\n                    // here we also check with the parseFloat to detect non decimal notation,\n                    // otherwise numbers like 0x10 will be accepted, but misunderstood when applied\n                    var error = isNaN(time) || time !== parseFloat(value);\n\n                    if (error) {\n                        hider.show($error);\n                        $ok.attr('disabled', true);\n                        focus();\n                    } else {\n                        $ok.removeAttr('disabled');\n                        hider.hide($error);\n                    }\n\n                    return error;\n                }\n\n                /**\n                 * Submit the data\n                 */\n                function submit() {\n                    if (!checkInputError()) {\n                        /**\n                         * The user has input a time and submitted the data\n                         * @event ok\n                         * @param {Number} time\n                         */\n                        self.trigger('ok', parseFloat($time.val()) * timeUnit);\n                        $cmp.modal('close');\n                    }\n                }\n\n                /**\n                 * Cancel the dialog\n                 */\n                function cancel() {\n                    /**\n                     * The dialog is just canceled\n                     * @event cancel\n                     */\n                    self.trigger('cancel');\n                    $cmp.modal('close');\n                }\n\n                /**\n                 * Set the focus on the input\n                 */\n                function focus() {\n                    $time.focus().select();\n                }\n\n                // we need to find the common extra time for all selected test takers\n                $time.val(_.reduce(initConfig.allowedResources, function(time, testTaker) {\n                    return Math.max(time, testTaker && testTaker.extraTime || 0);\n                }, 0) / timeUnit);\n\n                $cmp\n                    .addClass('modal')\n                    .on('closed.modal', function () {\n                        self.destroy();\n                    })\n                    .on('change', $time, function() {\n                        checkInputError();\n                    })\n                    .on('keyup', function(event) {\n                        if (13 === event.keyCode) {\n                            submit();\n                        } else {\n                            checkInputError();\n                        }\n                    })\n                    .on('click', '.action', function (event) {\n                        var $btn = $(event.target).closest('.action');\n                        var control = $btn.data('control');\n\n                        event.preventDefault();\n\n                        if ('done' === control) {\n                            submit();\n                        } else {\n                            cancel();\n                        }\n                    })\n                    .modal({\n                        width: 800\n                    });\n\n                focus();\n            })\n            .on('destroy', function () {\n                this.getElement()\n                    .removeClass('modal')\n                    .modal('destroy');\n            })\n            .init(initConfig);\n    }\n\n    return extraTimeFactory;\n});\n\n","\ndefine('tpl!taoProctoring/templates/delivery/deliveryLink', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<a class=\\\"elipsis\\\" href=\\\"\";\n  if (helper = helpers.url) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.url); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</a>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoProctoring/templates/delivery/statusFilter', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <option value=\\\"\";\n  if (helper = helpers.code) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.code); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<select name=\\\"filter[status]\\\" class=\\\"filter status select2\\\">\\n    <option value=\\\"\\\" selected></option>\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.statuses), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/monitoring',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'core/encoder/time',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/bulkActionPopup',\n    'ui/cascadingComboBox',\n    'taoProctoring/component/extraTime/extraTime',\n    'taoProctoring/component/extraTime/encoder',\n    'taoProctoring/component/breadcrumbs',\n    'taoProctoring/helper/status',\n    'tpl!taoProctoring/templates/delivery/deliveryLink',\n    'tpl!taoProctoring/templates/delivery/statusFilter',\n    'ui/datatable',\n    'select2'\n], function (\n    $,\n    _,\n    __,\n    helpers,\n    loadingBar,\n    timeEncoder,\n    encode,\n    feedback,\n    dialog,\n    bulkActionPopup,\n    cascadingComboBox,\n    extraTimePopup,\n    encodeExtraTime,\n    breadcrumbsFactory,\n    _status,\n    deliveryLinkTpl,\n    statusFilterTpl\n) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-monitoring';\n\n    /**\n     * The extra time unit: by default in minutes\n     * @type {Number}\n     */\n    var extraTimeUnit = 60;\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    return {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $content = $container.find('.content');\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var extraFields = $container.data('extrafields');\n            var categories = $container.data('categories');\n            var deliveryId = $container.data('delivery');\n            var context = $container.data('context');\n            var isManageable = $container.data('ismanageable');\n            var testCenterId = $container.data('testcenter');\n            var timeHandlingButton = $container.data('timehandling');\n            var defaultTag = $container.data('defaulttag');\n            var tagWaringBlock;\n            var printReportButton = $container.data('printreportbutton');\n            var manageUrl = helpers._url('manage', 'Delivery', 'taoProctoring', {delivery : deliveryId});\n            var terminateUrl = helpers._url('terminateExecutions', 'Monitor', 'taoProctoring', {delivery : deliveryId});\n            var pauseUrl = helpers._url('pauseExecutions', 'Monitor', 'taoProctoring', {delivery : deliveryId});\n            var authoriseUrl = helpers._url('authoriseExecutions', 'Monitor', 'taoProctoring', {delivery : deliveryId});\n            var extraTimeUrl = helpers._url('extraTime', 'Delivery', 'taoProctoring', {delivery : deliveryId});\n            var reportUrl = helpers._url('reportExecutions', 'Monitor', 'taoProctoring', {delivery : deliveryId});\n            var serviceUrl = helpers._url('deliveryExecutions', 'Monitor', 'taoProctoring', {delivery : deliveryId, context : context});\n            var serviceAllUrl = helpers._url('deliveryExecutions', 'Monitor', 'taoProctoring', {context : context});\n            var tools = [];\n            var model = [];\n            var actionButtons;\n            var highlightRows = [];\n            var actionList;\n\n            // request the server with a selection of test takers\n            function request(url, selection, data, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: _.merge({\n                            execution: selection\n                        }, data),\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        var messageContext, unprocessed;\n\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            messageContext = '';\n                            if (response) {\n                                unprocessed = _.map(response.unprocessed, function (id) {\n                                    var execution = getExecutionData(id);\n                                    if (execution) {\n                                        return __('Session %s - %s has not been processed', execution.delivery, execution.start_time);\n                                    }\n                                });\n\n                                if (unprocessed.length) {\n                                    messageContext += '<br>' + unprocessed.join('<br>');\n                                }\n                                if (response.error) {\n                                    messageContext += '<br>' + encode.html(response.error);\n                                }\n                            }\n\n                            feedback().error(__('Something went wrong ...') + '<br>' + messageContext, {encodeHtml: false});\n                        }\n                    });\n                }\n            }\n\n            // request the server to authorise the selected delivery executions\n            function authorise(selection) {\n                execBulkAction('authorize', __('Authorize Session'), selection, function(sel, reason){\n                    request(authoriseUrl, sel, {reason: reason}, __('Sessions authorized'));\n                });\n            }\n\n            // request the server to pause the selected delivery executions\n            function pause(selection) {\n                execBulkAction('pause', __('Pause Session'), selection, function(sel, reason){\n                    request(pauseUrl, sel, {reason: reason}, __('Sessions paused'));\n                });\n            }\n\n            // request the server to terminate the selected delivery executions\n            function terminate(selection) {\n                execBulkAction('terminate', __('Terminate Session'), selection, function(sel, reason){\n                    request(terminateUrl, sel, {reason: reason}, __('Sessions terminated'));\n                });\n            }\n\n            // report irregularities on the selected delivery executions\n            function report(selection) {\n                execBulkAction( 'report', __('Report Irregularity'), selection, function(sel, reason){\n                    request(reportUrl, sel, {reason: reason}, __('Sessions reported'));\n                });\n            }\n\n            function print(selection, type) {\n                execBulkAction('print', __('Print Score'), selection, function(sel){\n                    window.open(helpers._url(type,  'Reporting', 'taoProctoring', {'id' : sel}), 'printReport' + JSON.stringify(sel));\n                });\n            }\n\n            function terminateAndIrregularity(selection) {\n                dialog({\n                    message: __('Please, make your selection'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: [{\n                        id: 'terminate',\n                        type: 'error',\n                        label: __('Terminate session'),\n                        icon: 'stop',\n                        close: true,\n                        action: function() {terminate(selection);}\n                    },{\n                        id: 'irregularity',\n                        type: 'info',\n                        label: __('Report irregularity'),\n                        icon: 'delivery-small',\n                        close: true,\n                        action: function(){report(selection);}\n                    }]\n                });\n            }\n\n            // display the session history\n            function showHistory(selection) {\n                var urlParams = {\n                    session: selection\n                };\n                if (deliveryId) {\n                    urlParams.delivery = deliveryId;\n                }\n                window.location.href = helpers._url('sessionHistory', 'Reporting', 'taoProctoring', urlParams);\n            }\n\n            // print the score reports\n            function printReport(selection) {\n                print(selection, 'printReport');\n            }\n\n            // print the results of the session\n            function printResults(selection) {\n                print(selection, 'printRubric');\n            }\n\n            // display the time handling popup\n            function timeHandling(selection) {\n                var _selection = _.isArray(selection) ? selection : [selection];\n                var config = _.merge(listSessions('time', _selection), {\n                    renderTo : $content,\n                    actionName : __('Grant Extra Time'),\n                    unit: extraTimeUnit // input extra time in minutes\n                });\n\n                extraTimePopup(config).on('ok', function(time){\n                    request(extraTimeUrl, _selection, {time: time}, __('Extra time granted'));\n                });\n            }\n\n            /**\n             * Check if an action is available with respect to the provided state\n             * @param {String} what\n             * @param {Object} state\n             * @returns {Boolean}\n             */\n            function canDo(what, state) {\n                var status;\n                if (state && state.status) {\n                    status = _status.getStatusByCode(state.status);\n                    return status && status.can[what] === true;\n                }\n                return false;\n            }\n\n            /**\n             * Verify and reformat test taker data for the execBulkAction's need\n             * @param {Object} testTakerData\n             * @param {String} actionName\n             * @returns {Object}\n             */\n            function verifyDelivery(testTakerData, actionName){\n                var deliveryName, formatted, status;\n\n                if (_.isObject(testTakerData.delivery)) {\n                    deliveryName = testTakerData.delivery.label;\n                } else {\n                    deliveryName = $(testTakerData.delivery).text();\n                }\n                formatted = {\n                    id : testTakerData.id,\n                    label: deliveryName + ' [' + testTakerData.start_time + '] ' + testTakerData.test_taker_first_name + ' ' + testTakerData.test_taker_last_name\n                };\n                status = _status.getStatusByCode(testTakerData.state.status);\n\n                if(status){\n                    formatted.allowed = (status.can[actionName] === true);\n                    if(!formatted.allowed){\n                        formatted.reason = status.can[actionName];\n                    }\n                }\n                if (testTakerData.timer) {\n                    formatted.extraTime = testTakerData.timer.extraTime;\n                    formatted.consumedTime = testTakerData.timer.consumedExtraTime;\n                    formatted.remaining_time = testTakerData.timer.remaining_time;\n                }\n                return formatted;\n            }\n\n            /**\n             * Find the execution row data from its uri\n             *\n             * @param {String} uri\n             * @returns {Object}\n             */\n            function getExecutionData(uri){\n                return _.find(dataset.data, {id : uri});\n            }\n\n            /**\n             * Gets the list of allowed and forbidden test sessions from the provided selection\n             * @param {String} actionName\n             * @param {Array} selection\n             * @returns {Object} Returns the config object that contains the lists of allowed and forbidden test sessions\n             */\n            function listSessions(actionName, selection) {\n                var allowedDeliveries = [];\n                var forbiddenDeliveries = [];\n\n                _.each(selection, function (uri) {\n                    var testTakerData = getExecutionData(uri);\n                    var checkedDelivery;\n                    if(testTakerData){\n                        checkedDelivery = verifyDelivery(testTakerData, actionName);\n                        if(checkedDelivery.allowed){\n                            allowedDeliveries.push(checkedDelivery);\n                        }else{\n                            forbiddenDeliveries.push(checkedDelivery);\n                        }\n                    }\n                });\n\n                return {\n                    resourceType : 'session',\n                    allowedResources: allowedDeliveries,\n                    deniedResources: forbiddenDeliveries\n                };\n            }\n\n            /**\n             * Exec\n             * @param {String} actionName\n             * @param {String} actionTitle\n             * @param {Array|String} selection\n             * @param {Function} cb\n             * @returns {undefined}\n             */\n            function execBulkAction(actionName, actionTitle, selection, cb){\n                var _selection = _.isArray(selection) ? selection : [selection];\n                var askForReason = (categories[actionName] && categories[actionName].categoriesDefinitions && categories[actionName].categoriesDefinitions.length);\n                var config;\n\n                config = _.merge(listSessions(actionName, _selection), {\n                    renderTo : $content,\n                    actionName : actionTitle,\n                    reason : askForReason,\n                    reasonRequired: true,\n                    categoriesSelector: cascadingComboBox(categories[actionName] || {})\n                });\n\n                if (!config.allowedResources.length) {\n                    if (_selection.length > 1) {\n                        feedback().warning(__('No report available for these test sessions'));\n                    } else {\n                        feedback().warning(__('No report available for this test session'));\n                    }\n                } else {\n                    bulkActionPopup(config).on('ok', function(reason){\n                        //execute callback\n                        if(_.isFunction(cb)){\n                            cb(_selection, reason);\n                        }\n                    });\n                }\n            }\n\n            /**\n             * Return html for filter\n             * @returns {String}\n             */\n            function buildStatusFilter(){\n                return statusFilterTpl({statuses: _status.getStatuses()});\n            }\n\n            /**\n             * Prepare data to be sent on server + internal state saving\n             * @param {Boolean} applyTags\n             */\n            function setTagUsage(applyTags) {\n                if (defaultTag) {\n\n                    if (!$list.find('.tag').length) {\n                        var $filter = $('<span class=\"filter\"><input type=\"hidden\" name=\"tag\" class=\"tag\" value=\"' + applyTags + '\"/></span>');\n                        $filter.appendTo($list);\n                    }\n\n                    $list.find('.tag').val(applyTags);\n                    $list.data('applytags', applyTags);\n\n                    if (applyTags) {\n                        $list.find('.action-bar').children('.tool-tag').hide();\n                        tagWaringBlock = feedback().warning(__('Currently you are only viewing the test session in the \"%s\" group', defaultTag), {\n                            timeout: {\n                                success: -1\n                            }\n                        });\n                    } else {\n                        $list.find('.action-bar').children('.tool-notag').hide();\n                        tagWaringBlock.close();\n                    }\n\n                }\n            }\n            \n            /**\n             * Ser initial datatable filters\n             */\n            function setInitialFilters()\n            {\n                var now = new Date();\n                var nowStr =\n                    now.getFullYear() + '/' +\n                    (\"0\" + (now.getMonth() + 1)).slice(-2) + '/' +\n                    (\"0\" + (now.getDate())).slice(-2);\n\n                $('#start_time_filter').val(nowStr + ' - ' + nowStr);\n\n                if (defaultTag) {\n                    setTagUsage(true);\n                }\n\n                $list.datatable('filter');\n            }\n\n            /**\n             * Additional action perfomed with filter element\n             * @param {jQueryElement} $el\n             */\n            function statusFilterHandler($el) {\n                $el.select2({\n                    dropdownAutoWidth: true,\n                    placeholder: __('Filter'),\n                    minimumResultsForSearch: Infinity,\n                    allowClear: true\n                });\n            }\n\n            breadcrumbsFactory($container, crumbs);\n\n            // tool: page refresh\n            tools.push({\n                id: 'refresh',\n                icon: 'reset',\n                title: __('Refresh the page'),\n                label: __('Refresh'),\n                action: function() {\n                    $list.datatable('refresh');\n                }\n            });\n\n            if (defaultTag) {\n                tools.push({\n                    id: 'notag',\n                    icon: 'filter',\n                    css: 'btn-warning',\n                    label: __('Remove default tag filtering'),\n                    title: __('Remove default tag filtering'),\n                    action: function () {\n                        setTagUsage(false);\n                        $list.datatable('filter');\n                    }\n                });\n                tools.push({\n                    id: 'tag',\n                    icon: 'filter',\n                    title: __('Apply default tag'),\n                    label: __('Apply default tag'),\n                    action: function () {\n                        setTagUsage(true);\n                        $list.datatable('filter');\n                    }\n                });\n            }\n\n            // tool: manage test takers (only for unique delivery)\n            if (deliveryId && isManageable) {\n                tools.push({\n                    id: 'manage',\n                    icon: 'property-advanced',\n                    title: __('Manage sessions'),\n                    label: __('Manage'),\n                    action: function() {\n                        window.location.href = manageUrl;\n                    }\n                });\n            }\n            // tool: authorise the executions\n            tools.push({\n                id: 'authorise',\n                icon: 'play',\n                title: __('Authorize sessions'),\n                label: __('Authorise'),\n                massAction: true,\n                action: authorise\n            });\n\n            // tool: pause the executions\n            tools.push({\n                id: 'pause',\n                icon: 'pause',\n                title: __('Pause sessions'),\n                label: __('Pause'),\n                massAction: true,\n                action: pause\n            });\n\n            // tool: terminate the executions\n            tools.push({\n                id: 'terminate',\n                icon: 'stop',\n                title: __('Terminate sessions'),\n                label: __('Terminate'),\n                massAction: true,\n                action: terminate\n            });\n\n            // tool: report irregularities\n            tools.push({\n                id: 'irregularity',\n                icon: 'delivery-small',\n                title: __('Report irregularities'),\n                label: __('Report'),\n                massAction: true,\n                action: report\n            });\n\n            // tool: display sessions history\n            tools.push({\n                id: 'history',\n                icon: 'history',\n                title: __('Show the detailed session history'),\n                label: __('History'),\n                massAction: true,\n                action: showHistory\n            });\n\n            // tools: print score report\n            tools.push({\n                id : 'printRubric',\n                title : __('Print the score report'),\n                icon : 'print',\n                label : __('Print Score'),\n                massAction: true,\n                action : printResults\n            });\n\n            // tools: print results\n            if (printReportButton) {\n                tools.push({\n                    id : 'printReport',\n                    title : __('Print the assessment results'),\n                    icon : 'result',\n                    label : __('Print Results'),\n                    massAction: true,\n                    action : printReport\n                });\n            }\n\n            // tools: handles the session time\n            if (timeHandlingButton) {\n                tools.push({\n                    id : 'timeHandling',\n                    title : __('Session time handling'),\n                    icon : 'time',\n                    label : __('Time'),\n                    massAction: true,\n                    action : timeHandling\n                });\n            }\n\n            // column: delivery (only for all deliveries view)\n            if (!deliveryId) {\n                model.push({\n                    id: 'delivery',\n                    label: __('Session'),\n                    sortable : true,\n                    transform: function(value, row) {\n                        var delivery = row && row.delivery;\n                        if (delivery) {\n                            delivery.url = helpers._url('monitoring', 'Delivery', 'taoProctoring', {delivery : delivery.uri});\n                            value = deliveryLinkTpl(delivery);\n                        }\n                        return value;\n                    }\n                });\n            }\n\n            // column: test taker first name\n            model.push({\n                id: 'test_taker_first_name',\n                label: __('First name'),\n                sortable : true,\n                transform: function(value, row) {\n                    return row && row.testTaker && row.testTaker.test_taker_first_name || '';\n\n                }\n            });\n\n            // column: test taker last name\n            model.push({\n                id: 'test_taker_last_name',\n                label: __('Last name'),\n                sortable : true,\n                transform: function(value, row) {\n                    return row && row.testTaker && row.testTaker.test_taker_last_name || '';\n\n                }\n            });\n\n            //extra fields\n            _.each(extraFields, function(extraField){\n                model.push({\n                    id : extraField.id,\n                    label: extraField.label,\n                    sortable : true,\n                    transform: function(value, row) {\n                        return row && row.extraFields && row.extraFields[extraField.id] || '';\n                    }\n                });\n            });\n\n            // column: start time\n            model.push({\n                id: 'start_time',\n                sortable : true,\n                label: __('Started at'),\n                filterable : true,\n                customFilter : {\n                    template : '<input type=\"text\" id=\"start_time_filter\" name=\"filter[start_time]\"/>' +\n                    '<button class=\"icon-find js-start_time_filter_button\" type=\"button\"></button>',\n                    callback : function ($el) {\n                        $el.datepicker({\n                            dateFormat: \"yy/mm/dd\",\n                            onSelect: function( selectedDate ) {\n                                if(!$(this).data().datepicker.first){\n                                    $(this).data().datepicker.inline = true\n                                    $(this).data().datepicker.first = selectedDate;\n                                } else {\n                                    if(selectedDate > $(this).data().datepicker.first){\n                                        $(this).val($(this).data().datepicker.first+\" - \"+selectedDate);\n                                    } else {\n                                        $(this).val(selectedDate+\" - \"+$(this).data().datepicker.first);\n                                    }\n                                    $(this).data().datepicker.inline = false;\n                                    $('.js-start_time_filter_button').trigger('click');\n                                }\n                            },\n                            onClose:function(){\n                                delete $(this).data().datepicker.first;\n                                $(this).data().datepicker.inline = false;\n                            }\n                        });\n                    }\n                },\n            });\n\n            // column: delivery execution status\n            model.push({\n                id: 'status',\n                label: __('Status'),\n                sortable : true,\n                filterable : true,\n                customFilter : {\n                    template : buildStatusFilter(),\n                    callback : statusFilterHandler\n                },\n\n                transform: function(value, row) {\n                    var result = '',\n                        status;\n\n                    if (row && row.state && row.state.status) {\n                        status = _status.getStatusByCode(row.state.status);\n                        if (status) {\n                            result = status.label;\n                            if (row.state.status === 'INPROGRESS') {\n                                result = status.label;\n                            }\n                            if (result === 'Awaiting') {\n                                highlightRows.push(row.id);\n                            }\n                        }\n                    }\n                    return result;\n                }\n            });\n\n            // action: authorise the execution\n            model.push({\n                id: 'authorizeCl',\n                label: __('Authorize'),\n                type: 'actions',\n                actions: [{\n                    id: 'authorise',\n                    icon: 'play',\n                    title: __('Authorize session'),\n                    disabled: function() {\n                        return !canDo('authorize', this.state);\n                    },\n                    action: authorise\n                }]\n            });\n\n            // action: pause the execution\n            model.push({\n                id: 'pauseCl',\n                label: __('Pause'),\n                type: 'actions',\n                actions: [{\n                    id: 'pause',\n                    icon: 'pause',\n                    title: __('Pause session'),\n                    disabled: function() {\n                        return !canDo('pause', this.state);\n                    },\n                    action: pause\n                }]\n            });\n\n            // column: remaining time\n            model.push({\n                id: 'remaining_time',\n                sortable : true,\n                label: __('Remaining'),\n                transform: function(value, row) {\n                    var timer = _.isObject(row.timer) ? row.timer : {};\n                    var refinedValue = timer.remaining_time;\n                    var remaining = parseInt(refinedValue, 10);\n\n                    if (remaining || _.isFinite(remaining) ) {\n                        if (remaining) {\n                            refinedValue = timeEncoder.encode(remaining);\n                        } else {\n                            refinedValue = '';\n                        }\n                        refinedValue += encodeExtraTime(timer.extraTime, timer.consumedExtraTime, __('%s min'), extraTimeUnit);\n                    }\n\n                    return refinedValue;\n                }\n            });\n            if (timeHandlingButton) {\n                model.push({\n                    id: 'extraTime',\n                    label: __('Extra Time'),\n                    type: 'actions',\n                    actions: [{\n                        id : 'timeHandling',\n                        title : __('Session time handling'),\n                        icon : 'time',\n                        action : timeHandling,\n                        hidden: function() {\n                            return !canDo('time', this.state);\n                        }\n                    }]\n                });\n            }\n\n            // column: connectivity status of execution progress\n            model.push({\n                id: 'last_connect',\n                sortable: true,\n                label: __('Connectivity'),\n                transform: function(value, row) {\n                    if (row.state.status === _status.STATUS_INPROGRESS) {\n                        return row.online ? __('online') : __('offline');\n                    }\n                    return '';\n                }\n            });\n\n            // column: delivery execution progress\n            model.push({\n                id: 'progress',\n                label: __('Progress'),\n                transform: function(value, row) {\n                    return row && row.state && row.state.progress || '' ;\n                }\n            });\n\n            // column: proctoring actions\n            actionList = [{\n                id: 'terminateAndIrregularity',\n                icon: 'delivery-small',\n                title: __('Terminate and irregularity'),\n                action: terminateAndIrregularity\n            }, {\n                id: 'history',\n                icon: 'history',\n                title: __('Show the detailed session history'),\n                action: showHistory\n            }, {\n                id : 'printRubric',\n                title : __('Print the Score Report'),\n                icon : 'print',\n                action : printResults\n            }];\n            if (printReportButton) {\n                actionList.push({\n                    id : 'printReport',\n                    title : __('Print the assessment results'),\n                    icon : 'result',\n                    action : printReport\n                });\n            }\n\n            model.push({\n                id: 'administrationCl',\n                label: __('Administration'),\n                type: 'actions',\n                actions: actionList\n            });\n\n            // renders the datatable\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                    highlightRows = [];\n                })\n                .on('load.datatable', function(e, newDataset) {\n                    //update dateset in memory\n                    dataset = newDataset;\n\n                    //update the buttons, which have been reconstructed\n                    actionButtons = _({\n                        authorize : $list.find('.action-bar').children('.tool-authorise'),\n                        pause : $list.find('.action-bar').children('.tool-pause'),\n                        terminate : $list.find('.action-bar').children('.tool-terminate'),\n                        report : $list.find('.action-bar').children('.tool-irregularity')\n                    });\n\n                    if (defaultTag) {\n                        var applyTags = $list.data('applytags');\n                        applyTags = !_.isUndefined(applyTags) ? applyTags : true;\n                        setTagUsage(applyTags);\n                    }\n\n                    // highlight rows\n                    if (highlightRows.length) {\n                        _.forEach(highlightRows, function (v) {\n                            $list.datatable('highlightRow', v);\n                        });\n                    }\n\n                    loadingBar.stop();\n                })\n                .on('select.datatable', function() {\n                    //hide all controls then display each required one individually\n                    actionButtons.each(function($btn){\n                        $btn.hide();\n                    });\n                    _($list.datatable('selection')).map(function(uri){\n                        var row = getExecutionData(uri);\n                        return row.state.status;\n                    }).uniq().each(function(statusCode){\n                        var status = _status.getStatusByCode(statusCode);\n                        actionButtons.forIn(function($btn, action){\n                            if(status && status.can[action] === true){\n                                $btn.show();\n                            }\n                        });\n                    });\n                })\n                .datatable({\n                    url: deliveryId ? serviceUrl : serviceAllUrl,\n                    status: {\n                        empty: __('No sessions'),\n                        available: __('Current sessions'),\n                        loading: __('Loading')\n                    },\n                    filterStrategy: 'multiple',\n                    filterSelector: 'select, input:not(.select2-input, .select2-focusser)',\n                    filter: true,\n                    tools: tools,\n                    model: model,\n                    selectable: true,\n                    sortorder: 'desc',\n                    sortby : 'start_time'\n                }, dataset);\n\n            setInitialFilters();\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/testTakers',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-testtakers';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery test takers assign page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryAssignCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var serviceUrl = helpers._url('availableTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n            var assignUrl = helpers._url('assignTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n            var managerUrl = helpers._url('manage', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // send the selection to the server and redirect to the index page\n            var assign = function(selection) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: assignUrl,\n                        data: {\n                            testtaker: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            feedback().success(__('Test takers have been added'));\n                            window.location.href = managerUrl;\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function(event, response) {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No available test takers to assign'),\n                        available: __('Available test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'back',\n                        icon: 'left',\n                        title: __('Return to the session manager'),\n                        label: __('Back'),\n                        action: function() {\n                            window.location.href = managerUrl;\n                        }\n                    }, {\n                        id: 'refresh',\n                        icon: 'reset',\n                        title: __('Refresh the page'),\n                        label: __('Refresh'),\n                        action: function() {\n                            $list.datatable('refresh');\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the selected test takers to the session'),\n                        label: __('Assign the selected test takers'),\n                        massAction: true,\n                        action: function(selection) {\n                            assign(selection);\n                        }\n                    }],\n                    actions: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the test taker to the session'),\n                        action: function(id) {\n                            assign([id]);\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'identifier',\n                        label: __('Identifier')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryAssignCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n * Keep duration of test-taker activity in localstorage\n */\n\ndefine('taoQtiTest/testRunner/resumingStrategy/keepAfterResume',[], function () {\n    'use strict';\n\n    /**\n     * @param {Object} options\n     * @param {string} options.accuracy - period of user status checking\n     */\n    var sessionStateFactory = function sessionStateFactory(options) {\n        var _storageKey = 'sessionState_active_for',\n            _accuracy,\n            _interval = null;\n\n        var sessionState = {\n\n            reset: function reset() {\n                _reset();\n            },\n\n            restart: function restart() {\n                _reset();\n                _start();\n            },\n\n            getDuration: function getDuration() {\n                return getLocalStorageData();\n            }\n        };\n\n        function _start() {\n            if (null !== _interval) {\n                throw new TypeError('Tracking is already started');\n            }\n            _interval = setInterval(function () {\n                setLocalStorageData(getLocalStorageData() + _accuracy);\n            }, _accuracy);\n        }\n\n        function _stop() {\n            clearInterval(_interval);\n            _interval = null;\n        }\n\n        function _reset() {\n            _stop();\n            clearLocalStorage();\n        }\n\n        function _init() {\n            _accuracy = options && options.accuracy || 1000;\n        }\n\n        _init();\n\n        /**\n         * Store duration in ms to local storage\n         * @param {*} val - data to be stored.\n         */\n        function setLocalStorageData(val) {\n            window.localStorage.setItem(_storageKey, val);\n        }\n\n        /**\n         * Get duration from local storage\n         * @returns {int} in ms\n         */\n        function getLocalStorageData() {\n            var data = window.localStorage.getItem(_storageKey),\n                result = JSON.parse(data) || 0;\n            return result;\n        }\n\n        /**\n         * Clear storage\n         */\n        function clearLocalStorage() {\n            window.localStorage.removeItem(_storageKey);\n        }\n\n        return sessionState;\n    };\n\n    return sessionStateFactory;\n});\n","\ndefine('tpl!taoProctoring/templates/deliveryServer/authorizationSuccess', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"success-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"icon-result-ok\\\"></span></span>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoProctoring/templates/deliveryServer/authorizationListBoxActions', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType=\"function\";\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <span class=\\\"action cancel js-cancel\\\">\\n        <span class=\\\"icon-stop\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n    + \"\\n    </span>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<span class=\\\"listbox-actions\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.cancelable), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <span class=\\\"action play js-proceed\\\" data-delivery=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"icon-play\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proceed\", options) : helperMissing.call(depth0, \"__\", \"Proceed\", options)))\n    + \"\\n    </span>\\n</span>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/DeliveryServer/awaiting',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'ui/dialog/alert',\n    'core/polling',\n    'taoQtiTest/testRunner/resumingStrategy/keepAfterResume',\n    'util/url',\n    'ui/dialog/confirm',\n    'tpl!taoProctoring/templates/deliveryServer/authorizationSuccess',\n    'tpl!taoProctoring/templates/deliveryServer/authorizationListBoxActions'\n], function (_, $, __, helpers, loadingBar, listBox, dialogAlert, polling, keepAfterResume, url, dialogConfirm, authSuccessTpl, listBoxActionsTpl){\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 10 * 1000; // once every 10 seconds\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.awaiting-authorization';\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    var awaitingAuthorizationCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start(config){\n\n            var $container = $(cssScope);\n            var isAuthorizedUrl = helpers._url('isAuthorized', 'DeliveryServer', 'taoProctoring', {deliveryExecution : config.deliveryExecution});\n            var runDeliveryUrl = config.runDeliveryUrl;\n            var boxes = [{\n                id : 'goToDelivery',\n                label : config.deliveryLabel,\n                url : runDeliveryUrl,\n                content : __('Please wait, authorization in process ...'),\n                html : listBoxActionsTpl({id : config.deliveryExecution, cancelable: config.cancelable})\n            }];\n            var list = listBox({\n                title : config.deliveryInit ? __('Start Test') : __('Resume Test'),\n                textEmpty : '',\n                textNumber : '',\n                textLoading : '',\n                renderTo : $container,\n                list : boxes,\n                width : 12\n            });\n            var $content = $container.find('.listbox .content');\n\n            // we need to reset the local timer to avoid loss of time inside the assessment test session\n            keepAfterResume().reset();\n\n            loadingBar.start(false);\n\n            $container.on('click', '.js-cancel', function (e) {\n                //prevent clicking the parent link that goes to the monitoring screen\n                e.stopPropagation();\n                e.preventDefault();\n\n                dialogConfirm(\n                    __('Are you sure you want to end the test?'),\n                    function () {\n                        window.location.href = config.cancelUrl;\n                    }\n                );\n            });\n            $container.on('click', '.js-proceed', function (e) {\n                if ($container.hasClass('authorization-in-progress')) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            });\n\n            polling({\n                action : function (){\n                    var async = this.async();\n                    $.get(isAuthorizedUrl, function(result){\n                        var stop = false;\n\n                        if (!result.success) {\n                            stop = true;\n                            if (result.message) {\n                                dialogAlert(result.message, exit);\n                            } else {\n                                exit();\n                            }\n                        } else if (result.authorized) {\n                            stop = true;\n                            authorized();\n                        }\n\n                        if (stop) {\n                            async.reject();\n                        } else {\n                            async.resolve();\n                        }\n                    });\n                },\n                interval : refreshPolling,\n                autoStart : true\n            });\n\n            /**\n             * Function to be called when the delivery execution has been authorized\n             */\n            function authorized(){\n                loadingBar.stop();\n                $container.addClass('authorization-granted').removeClass('authorization-in-progress');\n                $content.html(authSuccessTpl({message : __('Authorized, you may proceed')}));\n            }\n\n            /**\n             * Goes back to the delivery index\n             */\n            function exit() {\n                window.location.href = config.returnUrl;\n            }\n        }\n    };\n\n    return awaitingAuthorizationCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\ndefine('taoProctoring/controller/Irregularity/index',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'ui/feedback',\n    'layout/loading-bar',\n    'helpers',\n    'jquery.fileDownload'\n], function (_, $, __, feedback, loadingBar, helpers){\n    'use strict';\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    var IrregularityCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start(){\n            var $form = $('#export-form');\n\n            $form.on('submit', function (e) {\n\n                e.stopPropagation();\n                e.preventDefault();\n                loadingBar.start();\n\n                var self = $(this),\n                    uri = $('[name=\"uri\"]', self).val(),\n                    from = $('[name=\"from\"]', self).val(),\n                    to = $('[name=\"to\"]', self).val(),\n                    params = {'uri': uri, 'from': from, 'to': to},\n                    exportUrl = helpers._url('exportIrregularities', 'Irregularity', 'taoProctoring', params);\n\n                $.fileDownload(exportUrl, {\n                    successCallback : function () {\n                        loadingBar.stop();\n                    },\n                    failCallback : function (jqXHR) {\n                        loadingBar.stop();\n                        var response = $.parseJSON($(jqXHR).text());\n                        if (response) {\n                            feedback().error(new Error(response.message));\n                        }\n                    }\n                });\n\n            });\n        }\n    };\n\n    return IrregularityCtlr;\n});\n\n","\ndefine('tpl!taoProctoring/component/dateRange/form', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<form class=\\\"daterange\\\">\\n    <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"From\", options) : helperMissing.call(depth0, \"__\", \"From\", options)))\n    + \"</label><input type=\\\"text\\\" name=\\\"periodStart\\\" value=\\\"\";\n  if (helper = helpers.start) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.start); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n    <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"to\", options) : helperMissing.call(depth0, \"__\", \"to\", options)))\n    + \"</label><input type=\\\"text\\\" name=\\\"periodEnd\\\" value=\\\"\";\n  if (helper = helpers.end) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.end); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n    <button class=\\\"small info\\\" data-control=\\\"filter\\\"><span class=\\\"icon icon-filter\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Filter\", options) : helperMissing.call(depth0, \"__\", \"Filter\", options)))\n    + \"</button>\\n</form>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/dateRange',[\n    'jquery',\n    'lodash',\n    'ui/component',\n    'tpl!taoProctoring/component/dateRange/form',\n    'jquery.timePicker'\n], function ($, _, component, formTpl) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        dateFormat: 'yy-mm-dd'\n    };\n\n    /**\n     * Creates a dates range with date pickers\n     *\n     * @param {Object} config\n     * @param {String} [config.start] - The initial start date (default: none)\n     * @param {String} [config.end] - The initial end date (default: none)\n     * @param {String} [config.dateFormat] - The date picker format (default: 'yy-mm-dd')\n     * @fires change when any date is changed\n     * @fires submit when the submit button is clicked\n     */\n    function dateRangeFactory(config){\n        var initConfig = _.defaults(config || {}, _defaults);\n        var periodStart = initConfig.start || '';\n        var periodEnd = initConfig.end || '';\n\n        var dateRange = {\n            /**\n             * Gets the start date of the range\n             * @returns {String}\n             */\n            getStart: function getStart() {\n                return periodStart;\n            },\n\n            /**\n             * Gets the end date of the range\n             * @returns {String}\n             */\n            getEnd: function getEnd() {\n                return periodEnd;\n            }\n        };\n\n        initConfig.start = periodStart;\n        initConfig.end = periodEnd;\n\n        return component(dateRange)\n            .setTemplate(formTpl)\n            .on('render', function() {\n                var self = this;\n                var $form = this.getElement();\n                var $periodStart = $form.find('input[name=periodStart]');\n                var $periodEnd = $form.find('input[name=periodEnd]');\n                var $filterBtn = $form.find('[data-control=\"filter\"]');\n\n                $periodStart.datepicker({\n                    dateFormat: initConfig.dateFormat,\n                    autoSize: true\n                }).change(function(){\n                    periodStart = $periodStart.val();\n                    $periodEnd.datepicker('option', 'minDate', periodStart);\n\n                    /**\n                     * @event change\n                     * @param {String} property\n                     * @param {String} value\n                     */\n                    self.trigger('change', 'start', periodStart);\n                });\n\n                $periodEnd.datepicker({\n                    dateFormat: initConfig.dateFormat,\n                    autoSize: true\n                }).change(function(){\n                    periodEnd = $periodEnd.val();\n                    $periodStart.datepicker('option', 'maxDate', periodEnd);\n\n                    /**\n                     * @event change\n                     * @param {String} property\n                     * @param {String} value\n                     */\n                    self.trigger('change', 'end', periodEnd);\n                });\n\n                $filterBtn.on('click', function(event) {\n                    event.preventDefault();\n\n                    periodStart = $periodStart.val();\n                    periodEnd = $periodEnd.val();\n\n                    /**\n                     * @event submit\n                     */\n                    self.trigger('submit');\n                });\n            })\n            .init(initConfig);\n    }\n\n    return dateRangeFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/component/history/historyTable',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/datatable'\n], function ($, _, __, component) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        sortBy: 'timestamp',\n        sortOrder: 'desc'\n    };\n\n    /**\n     * Renders the event details\n     * @param {String|Array} details\n     * @returns {String}\n     */\n    function renderDetails(details) {\n        if (_.isArray(details)) {\n            details = details.join('<br />');\n        }\n        return details;\n    }\n\n    /**\n     * Renders a history table\n     * @param {Object} config\n     * @param {String} config.service - The URL of the service providing the data\n     * @param {Object} [config.params] - A list of additional parameters to provide to the service\n     * @param {String} [config.sortBy] - The default sorted column\n     * @param {String} [config.sortOrder] - The default sort direction\n     * @param {Array} [config.tools] - A list of optional tools, using the datable format\n     * @param {Object} [data] - The first data set\n     * @returns {*}\n     */\n    function historyTableFactory(config, data) {\n        var initConfig = _.defaults(config || {}, _defaults);\n\n        // define some additional behavior\n        var historyTable = {\n            /**\n             * Refresh the table\n             * @param {Object} [params]\n             */\n            refresh: function refresh(params) {\n                var $element;\n\n                if (this.is('rendered')) {\n                    $element = this.getElement();\n                    if (params) {\n                        $element.datatable('options', {\n                            params: params\n                        });\n                    }\n                    $element.datatable('refresh');\n                } else {\n                    if (params) {\n                        initConfig.params = _.merge(initConfig.params, params);\n                    }\n                }\n            }\n        };\n\n        return component(historyTable)\n            .on('render', function() {\n                var self = this;\n                var tools = [{\n                    id: 'refresh',\n                    icon: 'reset',\n                    title: __('Refresh the page'),\n                    label: __('Refresh'),\n                    action: function() {\n                        self.refresh();\n                    }\n                }];\n                this.getElement()\n                    .on('query.datatable', function() {\n                        self.trigger('loading');\n                    })\n                    .on('load.datatable', function() {\n                        self.trigger('loaded');\n                    })\n                    .datatable({\n                        url: initConfig.service,\n                        params: initConfig.params,\n                        sortby: initConfig.sortBy,\n                        sortorder: initConfig.sortOrder,\n                        status: {\n                            empty: __('No history to display!'),\n                            available: __('Available history'),\n                            loading: __('Loading')\n                        },\n                        selectable: !!(initConfig.tools && _.find(initConfig.tools, {massAction: true})),\n                        tools: tools.concat(initConfig.tools || []),\n                        model: [{\n                            id: 'date',\n                            label: __('Date'),\n                            sortable: true\n                        }, {\n                            id: 'role',\n                            label: __('Role'),\n                            sortable: true\n                        }, {\n                            id: 'actor',\n                            label: __('Actor'),\n                            sortable: true\n                        }, {\n                            id: 'event',\n                            label: __('Event'),\n                            sortable: true\n                        }, {\n                            id: 'details',\n                            label: __('Details'),\n                            transform: renderDetails\n                        }, {\n                            id: 'context',\n                            label: __('Context'),\n                            transform: renderDetails\n                        }]\n                    }, data);\n            })\n            .init(initConfig);\n    }\n\n    return historyTableFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Reporting/history',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'taoProctoring/component/dateRange',\n    'taoProctoring/component/history/historyTable',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, _, __, helpers, loadingBar, encode, dateRangeFactory, historyTableFactory, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.session-history';\n\n    /**\n     * Controls the taoProctoring session history page\n     *\n     * @type {Object}\n     */\n    var taoProctoringReportCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var dataset = $container.data('set');\n            var testCenterId = $container.data('testcenter');\n            var deliveryId = $container.data('delivery');\n            var sessions = $container.data('sessions');\n            var sortBy = $container.data('sortBy');\n            var sortOrder = $container.data('sortorder');\n            var periodStart = $container.data('periodstart');\n            var periodEnd = $container.data('periodEnd');\n            var serviceUrl = helpers._url('history', 'Reporting', 'taoProctoring', {delivery : deliveryId, session: sessions});\n            var detailedHistory = false;\n\n            var historyTable = historyTableFactory({\n                    tools: [{\n                        id: 'show-detailed-report',\n                        icon: 'insert-horizontal-line',\n                        title: __('Show detailed session history messages'),\n                        label: __('Show detailed report'),\n                        action: function() {\n                            var tool = historyTable.config.tools.find(function (val) {return val.id === 'show-detailed-report'});\n\n                            historyTable.config.params.detailed = detailedHistory = !detailedHistory;\n                            tool.label = detailedHistory ? __('Show brief report') : __('Show detailed report');\n                            historyTable.refresh();\n                        }\n                    }],\n                    params: {detailed: detailedHistory},\n                    service: serviceUrl,\n                    sortBy: sortBy,\n                    sortOrder: sortOrder\n                }, dataset)\n                .on('loading', function() {\n                    loadingBar.start();\n                })\n                .on('loaded', function() {\n                    loadingBar.stop();\n                })\n                .render($container.find('.list'));\n\n            breadcrumbsFactory($container, $container.data('breadcrumbs'));\n\n            dateRangeFactory({\n                start : periodStart,\n                end : periodEnd,\n                renderTo: $container.find('.panel')\n            }).on('change submit', function() {\n                historyTable.refresh({\n                    periodStart : this.getStart(),\n                    periodEnd : this.getEnd()\n                });\n            });\n        }\n    };\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    return taoProctoringReportCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Aleh Hutnikau, <hutnikau@1pt.com>\n */\ndefine('taoProctoring/controller/Tools/pauseActiveExecutions',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'util/url',\n    'ui/feedback',\n    'ui/cascadingComboBox',\n    'ui/bulkActionPopup'\n], function($, __, helpers, url, feedback, cascadingComboBox, bulkActionPopup){\n    'use strict';\n    var $container = $('.js-pause-active-executions-container');\n    var categories = $container.data('reasoncategories');\n    var msg = __(\"Warning, you are about to pause all in progress tests. All test takers will be paused on or before the next heartbeat. Please provide a reason for this action.\")\n\n    function doPause(reason) {\n        $.ajax({\n            type: \"POST\",\n            data: {\n                reason : reason\n            },\n            url: url.route('pauseActiveExecutions', 'Tools', 'taoProctoring'),\n            dataType: 'json',\n            success: function(data) {\n                helpers.loaded();\n                if (data.success) {\n                    feedback().success(data.message);\n                } else {\n                    feedback().error(data.message);\n                }\n            }\n        });\n    }\n\n    return {\n        start : function(){\n            $('.js-pause').on('click', function() {\n                var config;\n\n                config = {\n                    renderTo : $container,\n                    actionName : msg,\n                    reason : true,\n                    allowedResources: [],\n                    reasonRequired: true,\n                    categoriesSelector: cascadingComboBox(categories['pause'])\n                };\n\n                bulkActionPopup(config).on('ok', function(reason){\n                    doPause(reason);\n                });\n            });\n        }\n    };\n});\n\n"]}