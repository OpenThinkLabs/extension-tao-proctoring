{"version":3,"file":"routes.js","sources":["routes.js","Delivery/index.js","Delivery/monitoring.js","Delivery/testTakers.js","Diagnostic/index.js","Reporting/index.js","TestCenter/index.js","TestCenter/testCenter.js"],"names":[],"mappings":"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","sourcesContent":["define('taoProctoring/controller/routes',[],function(){\n    return {\n        'TestCenter' : {\n            'actions' : {\n                'index' : 'controller/TestCenter/index',\n                'testCenter' : 'controller/TestCenter/testCenter'\n            }\n        },\n        'Diagnostic' : {\n            'actions' : {\n                'index' : 'controller/Diagnostic/index'\n            }\n        },\n        'Reporting' : {\n            'actions' : {\n                'index' : 'controller/Reporting/index'\n            }\n        },\n        'Delivery' : {\n            'actions' : {\n                'index' : 'controller/Delivery/index',\n                'monitoring' : 'controller/Delivery/monitoring',\n                'testTakers' : 'controller/Delivery/testTakers'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'ui/breadcrumbs'\n], function ($, __, helpers, loadingBar, listBox, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var boxes = $container.data('list');\n            var crumbs = $container.data('breadcrumbs');\n            var list = listBox({\n                title: __(\"My Deliveries\"),\n                textEmpty: __(\"No deliveries available\"),\n                textNumber: __(\"Available\"),\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true,\n                list: boxes\n            });\n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n            var serviceUrl = helpers._url('index', 'TestCenter', 'taoProctoring');\n            var pollTo = null;\n\n            // update the index from a JSON array\n            var update = function(boxes) {\n                if (pollTo) {\n                    clearTimeout(pollTo);\n                    pollTo = null;\n                }\n\n                list.update(boxes);\n                loadingBar.stop();\n\n                // poll the server at regular interval to refresh the index\n                if (refreshPolling) {\n                    pollTo = setTimeout(refresh, refreshPolling);\n                }\n            };\n\n            // refresh the index\n            var refresh = function() {\n                loadingBar.start();\n                list.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(response) {\n                    boxes = response && response.list;\n                    update(boxes);\n                });\n            };\n\n            if (!boxes) {\n                refresh();\n            } else {\n                loadingBar.stop();\n            }\n        }\n    };\n\n    return taoProctoringCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/monitoring',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-monitoring';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testCenter');\n            var assignUrl = helpers._url('testTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var removeUrl = helpers._url('remove', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var authoriseUrl = helpers._url('authorise', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var serviceUrl = helpers._url('deliveryTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            \n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n            \n            //@TODO format the incoming data before displaying in the datatable\n            \n            // request the server with a selection of test takers\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            tt: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            // request the server to authorise the selected test takers\n            var authorise = function(selection) {\n                dialog({\n                    message: __('Not yet implemented!'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: 'ok'\n                });\n                //request(authoriseUrl, selection, __('Test takers have been authorised'));\n            };\n\n            // request the server to remove the selected test takers\n            var remove = function(selection) {\n                request(removeUrl, selection, __('Test takers have been removed'));\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No assigned test takers'),\n                        available: __('Assigned test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign test takers to this delivery'),\n                        label: __('Add test takers'),\n                        action: function() {\n                            location.href = assignUrl;\n                        }\n                    }, {\n                        id: 'authorise',\n                        icon: 'checkbox-checked',\n                        title: __('Authorise the selected test takers to run the delivery'),\n                        label: __('Authorise'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be authorized to start this delivery. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    authorise(selection);\n                                }\n                            });\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected test takers from the delivery'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be removed from this delivery. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'authorise',\n                        icon: 'checkbox-checked',\n                        title: __('Authorise the test taker to run the delivery'),\n                        hidden: function() {\n                            return !!this.authorised;\n                        },\n                        action: function(id) {\n                            dialog({\n                                message: __('The test taker will be authorized to start this delivery. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    authorise([id]);\n                                }\n                            });\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the test taker from the delivery'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The test taker will be removed from this delivery. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'company',\n                        label: __('Company name')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/testTakers',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-testtakers';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery test takers assign page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryAssignCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testCenter');\n            var serviceUrl = helpers._url('availableTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId});\n            var assignUrl = helpers._url('assign', 'Delivery', 'taoProctoring', {delivery : deliveryId});\n            var indexUrl = helpers._url('monitoring', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter:testCenterId});\n\n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n\n            // send the selection to the server and redirect to the index page\n            var assign = function(selection) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: assignUrl,\n                        data: {\n                            tt: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            feedback().success(__('Test takers have been added'));\n                            location.href = indexUrl;\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function(event, response) {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No available test takers to assign'),\n                        available: __('Available test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'back',\n                        icon: 'left',\n                        title: __('Return to the delivery'),\n                        label: __('Back'),\n                        action: function() {\n                            history.back();\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the selected test takers to the delivery'),\n                        label: __('Assign the selected test takers'),\n                        massAction: true,\n                        action: function(selection) {\n                            assign(selection);\n                        }\n                    }],\n                    actions: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the test taker to the delivery'),\n                        action: function(id) {\n                            assign([id]);\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'company',\n                        label: __('Company name')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryAssignCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Diagnostic/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.diagnostic-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring readiness check page\n     *\n     * @type {Object}\n     */\n    var taoProctoringDiagnosticCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var testCenterId = $container.data('testCenter');\n            var removeUrl = helpers._url('remove', 'Diagnostic', 'taoProctoring', {testCenter : testCenterId});\n            var serviceUrl = helpers._url('index', 'Diagnostic', 'taoProctoring', {testCenter : testCenterId});\n\n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n\n            // request the server with a selection of readiness check results\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            tt: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            var notYet = function() {\n                dialog({\n                    message: __('Not yet implemented!'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: 'ok'\n                });\n            };\n\n            // request the server to remove the selected diagnostic-index\n            var remove = function(selection) {\n                notYet();\n                //request(removeUrl, selection, __('The readiness check result have been removed'));\n            };\n            \n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No readiness checks have been done!'),\n                        available: __('Readiness checks already done'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'launch',\n                        icon: 'play',\n                        title: __('Launch another readiness check'),\n                        label: __('Launch readiness check'),\n                        action: function() {\n                            notYet();\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected readiness check results'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The selected readiness check results will be removed. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the readiness check result?'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The readiness check result will be removed. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'workstation',\n                        label: __('Workstation')\n                    }, {\n                        id: 'os',\n                        label: __('OS')\n                    }, {\n                        id: 'browser',\n                        label: __('Browser')\n                    }, {\n                        id: 'performance',\n                        label: __('Performance')\n                    }, {\n                        id: 'bandwidth',\n                        label: __('Bandwidth')\n                    }, {\n                        id: 'date',\n                        label: __('Date')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return taoProctoringDiagnosticCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Reporting/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.reporting-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring reporting-index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringReportCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var testCenterId = $container.data('testCenter');\n\t\t\tvar downloadUrl = helpers._url('download', 'Reporting', 'taoProctoring', {testCenter : testCenterId});\n            var serviceUrl = helpers._url('index', 'Reporting', 'taoProctoring', {testCenter : testCenterId});\n\n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n\n            // request the server with a selection of reports\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            tt: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            var notYet = function() {\n                dialog({\n                    message: __('Not yet implemented!'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: 'ok'\n                });\n            };\n            \n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No reports to display!'),\n                        available: __('Available reports'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'download',\n                        icon: 'download',\n                        title: __('Download the selected reports to a CSV file'),\n                        label: __('Download CSV'),\n                        action: function() {\n                            notYet();\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'delivery',\n                        label: __('Delivery')\n                    }, {\n                        id: 'testtaker',\n                        label: __('Test Taker')\n                    }, {\n                        id: 'proctor',\n                        label: __('Proctor')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }, {\n                        id: 'start',\n                        label: __('Start')\n                    }, {\n                        id: 'end',\n                        label: __('End')\n                    }, {\n                        id: 'pause',\n                        label: __('Pause #')\n                    }, {\n                        id: 'resume',\n                        label: __('Resume #')\n                    }, {\n                        id: 'irregularities',\n                        label: __('Irregularities')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return taoProctoringReportCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/TestCenter/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'ui/breadcrumbs'\n], function ($, __, helpers, loadingBar, listBox, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.testcenters-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var boxes = $container.data('list');\n            var crumbs = $container.data('breadcrumbs');\n            var list = listBox({\n                title: __(\"My Test sites\"),\n                textEmpty: __(\"No test site available\"),\n                textNumber: __(\"Available\"),\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true\n            });\n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n            var serviceUrl = helpers._url('index', 'TestCenter', 'taoProctoring');\n            var pollTo = null;\n\n            // update the index from a JSON array\n            var update = function(boxes) {\n                if (pollTo) {\n                    clearTimeout(pollTo);\n                    pollTo = null;\n                }\n\n                list.update(boxes);\n                loadingBar.stop();\n\n                // poll the server at regular interval to refresh the index\n                if (refreshPolling) {\n                    pollTo = setTimeout(refresh, refreshPolling);\n                }\n            };\n\n            // refresh the index\n            var refresh = function() {\n                loadingBar.start();\n                list.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(response) {\n                    boxes = response && response.list;\n                    update(boxes);\n                });\n            };\n\n            if (!boxes) {\n                refresh();\n            } else {\n                update(boxes);\n            }\n        }\n    };\n\n    return taoProctoringIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/TestCenter/testCenter',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'ui/breadcrumbs'\n], function ($, __, helpers, loadingBar, listBox, breadcrumbs) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.testcenters-testcenter';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring test site page\n     *\n     * @type {Object}\n     */\n    var taoProctoringTestSiteCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var boxes = $container.data('list');\n            var crumbs = $container.data('breadcrumbs');\n            var id = $container.data('id');\n            var title = $container.data('title');\n            var list = listBox({\n                title: title,\n                textEmpty: false,\n                textNumber: false,\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true,\n                width: 4\n            });\n            var bc = breadcrumbs({\n                breadcrumbs : crumbs,\n                renderTo: $container.find('.header'),\n                replace: true\n            });\n            var serviceUrl = helpers._url('testCenter', 'TestCenter', 'taoProctoring');\n\n            // update the index from a JSON array\n            var update = function(boxes) {\n                list.update(boxes);\n                loadingBar.stop();\n            };\n\n            // refresh the index\n            var refresh = function() {\n                loadingBar.start();\n                list.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(response) {\n                    boxes = response && response.list;\n                    update(boxes);\n                });\n            };\n\n            if (!boxes) {\n                refresh();\n            } else {\n                update(boxes);\n            }\n        }\n    };\n\n    return taoProctoringTestSiteCtlr;\n});\n\n"]}