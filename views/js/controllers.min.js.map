{"version":3,"file":"routes.js","sources":["routes.js","../helper/status.js","../component/breadcrumbs.js","../templates/delivery/listBoxActions!tpl","../templates/delivery/listBoxStats!tpl","Delivery/index.js","Delivery/manage.js","tpl!taoProctoring/tpl/item-progress","tpl!taoProctoring/tpl/delivery-link","Delivery/monitoring.js","Delivery/testTakers.js","../../taoQtiTest/testRunner/resumingStrategy/keepAfterResume.js","../templates/deliveryServer/authorizationSuccess!tpl","DeliveryServer/awaiting.js","Diagnostic/index.js","../templates/reporting/datepicker!tpl","Reporting/index.js","TestCenter/index.js","TestCenter/testCenter.js"],"names":[],"mappings":"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","sourcesContent":["define('taoProctoring/controller/routes',{\n    'TestCenter' : {\n        'actions' : {\n            'index' : 'controller/TestCenter/index',\n            'testCenter' : 'controller/TestCenter/testCenter'\n        }\n    },\n    'Diagnostic' : {\n        'actions' : {\n            'index' : 'controller/Diagnostic/index'\n        }\n    },\n    'Reporting' : {\n        'actions' : {\n            'index' : 'controller/Reporting/index'\n        }\n    },\n    'Delivery' : {\n        'actions' : {\n            'index' : 'controller/Delivery/index',\n            'manage' : 'controller/Delivery/manage',\n            'monitoring' : 'controller/Delivery/monitoring',\n            'monitoringAll' : 'controller/Delivery/monitoring',\n            'testTakers' : 'controller/Delivery/testTakers'\n        }\n    }\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoProctoring/helper/status',['lodash', 'i18n'], function(_, __){\n    'use strict';\n    var _status = {\n        init : {\n            code : 'INIT',\n            label : __('Init'),\n            can : {\n                authorize : __('not awaiting'),\n                pause : __('not in progress'),\n                terminate : true,\n                report : true\n            }\n        },\n        awaiting : {\n            code : 'AWAITING',\n            label : __('Awaiting'),\n            can : {\n                authorize : true,\n                pause : __('not in progress'),\n                terminate : true,\n                report : true\n            }\n        },\n        authorized : {\n            code : 'AUTHORIZED',\n            label : __('Authorized but not started'),\n            can : {\n                authorize : __('already authorized'),\n                pause : __('not started'), //not in progress\n                terminate : true,\n                report : true\n            }\n        },\n        inprogress : {\n            code : 'INPROGRESS',\n            label : __('In Progress'),\n            can : {\n                authorize : __('already authorized'),\n                pause : true,\n                terminate : true,\n                report : true\n            }\n        },\n        paused : {\n            code : 'PAUSED',\n            label : __('Paused'),\n            can : {\n                authorize : __('is paused'),\n                pause : __('is already paused'),\n                terminate : true,\n                report : true\n            }\n        },\n        completed : {\n            code : 'COMPLETED',\n            label : __('Completed'),\n            can : {\n                authorize : __('is completed'),\n                pause : __('is completed'),\n                terminate : __('is completed'),\n                report : __('is completed')\n            }\n        },\n        terminated : {\n            code : 'TERMINATED',\n            label : __('Terminated'),\n            can : {\n                authorize : __('is terminated'),\n                pause : __('is terminated'),\n                terminate : __('is terminated'),\n                report : __('is terminated')\n            }\n        }\n    };\n\n    /**\n     * Get the status model from its name\n     * @param {string} statusName\n     * @returns {object}\n     */\n    function getStatus(statusName){\n        return _status[statusName];\n    }\n\n    /**\n     * Get the status model from its code\n     * @param {string} statusName\n     * @returns {object}\n     */\n    function getStatusByCode(statusCode){\n        return _.find(_status, {code : statusCode});\n    }\n\n    /**\n     * Verify and reformat test taker data for the execBulkAction's need\n     * @param {Object} testTakerData\n     * @param {String} actionName\n     * @returns {Object}\n     */\n    function verifyTestTaker(testTakerData, actionName){\n        var formatted = {\n            id : testTakerData.id,\n            label : testTakerData.firstname + ' ' + testTakerData.lastname\n        };\n        var status = _status.getStatusByCode(testTakerData.state.status);\n        if(status){\n            formatted.allowed = (status.can[actionName] === true);\n            if(!formatted.allowed){\n                formatted.reason = status.can[actionName];\n            }\n        }\n        return formatted;\n    }\n\n    return {\n        getStatus : getStatus,\n        getStatusByCode : getStatusByCode,\n        verifyTestTaker : verifyTestTaker\n    };\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoProctoring/component/breadcrumbs',['ui/breadcrumbs'], function(breadcrumbs){\n    \n    /**\n     * Wrap the generic breadcrumbs component into a very specialized\n     * \n     * @param {JQyery} $container\n     * @param {Array} [crumbs]\n     * @returns {unresolved}\n     */\n    return function breadcrumbFactory($container, crumbs){\n        return breadcrumbs({\n            breadcrumbs : crumbs || $container.data('breadcrumbs'),\n            renderTo: $container.find('.header'),\n            replace: true,\n            cls : 'action-bar horizontal-action-bar'\n        });\n    };\n});\n\n\n","\ndefine('tpl!taoProctoring/templates/delivery/listBoxActions', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<span class=\\\"listbox-actions\\\">\\n    <span class=\\\"action pause\\\" data-delivery=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"icon-pause\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Pause\", options) : helperMissing.call(depth0, \"__\", \"Pause\", options)))\n    + \"\\n    </span>\\n    <span class=\\\"action play\\\">\\n        <span class=\\\"icon-play\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Monitor\", options) : helperMissing.call(depth0, \"__\", \"Monitor\", options)))\n    + \"\\n    </span>\\n</span>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoProctoring/templates/delivery/listBoxStats', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n<ul class=\\\"plain listbox-properties\\\">\\n    <li>\\n        <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start\", options) : helperMissing.call(depth0, \"__\", \"Start\", options)))\n    + \"</label>: \";\n  if (helper = helpers.periodStart) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.periodStart); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </li>\\n    <li>\\n        <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"End\", options) : helperMissing.call(depth0, \"__\", \"End\", options)))\n    + \"</label>: \";\n  if (helper = helpers.periodEnd) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.periodEnd); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </li>\\n</ul>\\n\";\n  return buffer;\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showProperties), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n<p class=\\\"listbox-stats\\\">\\n    <span class=\\\"icon-lock\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.locked) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.locked); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"icon-play\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.inProgress) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.inProgress); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span class=\\\"icon-pause\\\"></span><span class=\\\"number\\\">\";\n  if (helper = helpers.paused) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.paused); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n</p>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/index',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'helpers',\n    'moment',\n    'layout/loading-bar',\n    'ui/listbox',\n    'util/encode',\n    'ui/feedback',\n    'ui/bulkActionPopup',\n    'taoProctoring/helper/status',\n    'taoProctoring/component/breadcrumbs',\n    'tpl!taoProctoring/templates/delivery/listBoxActions',\n    'tpl!taoProctoring/templates/delivery/listBoxStats'\n], function (_, $, __, helpers, moment, loadingBar, listBox, encode, feedback, bulkActionPopup, _status, breadcrumbsFactory, actionsTpl, statsTpl) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var boxes = $container.data('list');\n            var crumbs = $container.data('breadcrumbs');\n            var categories = $container.data('categories');\n            var testCenterId = $container.data('testcenter');\n            var list = listBox({\n                title: __(\"Sessions\"),\n                textEmpty: __(\"No sessions available\"),\n                textNumber: __(\"Available\"),\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true,\n                list: format(boxes),\n                width:12\n            });\n            var bc = breadcrumbsFactory($container, crumbs);\n            var serviceUrl = helpers._url('deliveries', 'Delivery', 'taoProctoring', {testCenter : testCenterId});\n            var pollTo = null;\n            \n            function format(boxes){\n                \n                _.each(boxes, function(box){\n\n                    var props = box.properties;\n                    var tplData = {\n                        locked : box.stats.awaitingApproval,\n                        inProgress : box.stats.inProgress,\n                        paused : box.stats.paused\n                    };\n\n                    if(props && props.periodStart && props.periodEnd){\n                        tplData.showProperties = true;\n                        tplData.periodStart = moment(props.periodStart).toString();\n                        tplData.periodEnd = moment(props.periodEnd).toString();\n\n                        //add a special class for boxes that have more information to display\n                        box.cls = 'has-properties-displayed';\n                    }\n                    box.html = actionsTpl({\n                        id : box.id\n                    });\n                    box.content = statsTpl(tplData);\n                });\n\n                return boxes;\n            }\n\n            // update the index from a JSON array\n            function update(boxes) {\n                \n                if (pollTo) {\n                    clearTimeout(pollTo);\n                    pollTo = null;\n                }\n\n                list.update(format(boxes));\n                loadingBar.stop();\n\n                // poll the server at regular interval to refresh the index\n                if (refreshPolling) {\n                    pollTo = setTimeout(refresh, refreshPolling);\n                }\n            };\n\n            // refresh the index\n            function refresh() {\n                loadingBar.start();\n                list.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(boxes) {\n                    update(boxes);\n                });\n            };\n            \n            /**\n             * Exec \n             * @param {String} actionName\n             * @param {String} actionTitle\n             * @param {Array} selection\n             * @param {Function} cb\n             * @returns {undefined}\n             */\n            function pause(deliveryId, selection){\n                \n                var allowed  = _.map(selection, function(data){\n                    return {\n                        id : data.id,\n                        label : data.testTaker.firstName + ' ' + data.testTaker.lastName\n                    };\n                });\n                \n                bulkActionPopup({\n                    renderTo : $container,\n                    actionName : __('Pause Session'),\n                    reason : true,\n                    resourceType : 'test taker',\n                    allowedResources : allowed,\n                    categoriesDefinitions : categories.pause.categoriesDefinitions,\n                    categories : categories.pause.categories\n                }).on('ok', function(reason){\n                    //execute callback\n                    $.ajax({\n                        url: helpers._url('pauseExecutions', 'Delivery', 'taoProctoring'),\n                        data: {\n                            delivery : deliveryId,\n                            testCenter : testCenterId,\n                            execution: _.pluck(selection, 'id'),\n                            reason: reason\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n                        if (response && response.success) {\n                            feedback().success('Selected deliveries successfully paused');\n                            refresh();\n                        } else {\n                            feedback().warning(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                });\n            }\n            \n            $container.on('click', '.pause', function(e){\n                \n                var deliveryId = $(this).data('delivery');\n                var pauseUrl = (deliveryId === 'all') ? \n                    helpers._url('allDeliveriesExecutions', 'Delivery', 'taoProctoring', {testCenter : testCenterId}) :\n                    helpers._url('deliveryExecutions', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n                \n                //prevent clicking the parent link that goes to the monitoring screen\n                e.stopPropagation();\n                e.preventDefault();\n                \n                //get list of all test taker for the selected delivery\n                $.get(pauseUrl, function(res){\n                    if(_.isPlainObject(res) && _.isArray(res.data)){\n                        var inProgressExecs = _.filter(res.data, function(data){\n                            return (data.state && data.state.status === _status.getStatus('inprogress').code);\n                        });\n                        if(inProgressExecs.length){\n                            pause(deliveryId, inProgressExecs);\n                        }else{\n                            feedback().info(__('There is no delivery in progress'));\n                        }\n                    }\n                });\n            });\n            \n            if (!boxes) {\n                refresh();\n            } else {\n                loadingBar.stop();\n            }\n        }\n    };\n\n    return taoProctoringCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/manage',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-manager';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var assignUrl = helpers._url('testTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var removeUrl = helpers._url('removeTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var serviceUrl = helpers._url('deliveryTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var monitoringUrl = helpers._url('monitoring', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // request the server with a selection of test takers\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            testtaker: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            // request the server to remove the selected test takers\n            var remove = function(selection) {\n                request(removeUrl, selection, __('Test takers have been removed'));\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No assigned test takers'),\n                        available: __('Assigned test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'refresh',\n                        icon: 'reset',\n                        title: __('Refresh the page'),\n                        label: __('Refresh'),\n                        action: function() {\n                            $list.datatable('refresh');\n                        }\n                    }, {\n                        id: 'back',\n                        icon: 'preview',\n                        title: __('Return to the session monitoring'),\n                        label: __('Monitoring'),\n                        action: function() {\n                            location.href = monitoringUrl;\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign more test takers to this session'),\n                        label: __('Add test takers'),\n                        action: function() {\n                            location.href = assignUrl;\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected test takers from the session'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be removed from this session. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the test taker from the session'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The test taker will be removed from this session. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'identifier',\n                        label: __('Identifier')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryIndexCtlr;\n});\n\n","\ndefine('tpl!taoProctoring/tpl/item-progress', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.position), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.label), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"<span class=\\\"state section-progress\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"section\", options) : helperMissing.call(depth0, \"__\", \"section\", options)))\n    + \" \";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.total), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"/\";\n  if (helper = helpers.total) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.total); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"state section-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.position), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.time), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"<span class=\\\"state item-progress\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"item\", options) : helperMissing.call(depth0, \"__\", \"item\", options)))\n    + \" \";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.total), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\";\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.display), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program11(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <span class=\\\"item-time\\\">\\n        <span class=\\\"icon icon-time\\\"></span>\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.elapsedStr), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.totalStr), {hash:{},inverse:self.noop,fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </span>\\n        \";\n  return buffer;\n  }\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"<span class=\\\"elapsed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Elapsed time\", options) : helperMissing.call(depth0, \"__\", \"Elapsed time\", options)))\n    + \"\\\">\";\n  if (helper = helpers.elapsedStr) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.elapsedStr); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\nfunction program14(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"<span class=\\\"total\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Total time\", options) : helperMissing.call(depth0, \"__\", \"Total time\", options)))\n    + \"\\\">\";\n  if (helper = helpers.totalStr) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.totalStr); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  buffer += \"<span class=\\\"progress\\\">\\n\";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.section), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.item), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</span>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoProctoring/tpl/delivery-link', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<a class=\\\"elipsis\\\" href=\\\"\";\n  if (helper = helpers.url) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.url); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</a>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/monitoring',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'helpers',\n    'moment',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/bulkActionPopup',\n    'taoProctoring/component/breadcrumbs',\n    'taoProctoring/helper/status',\n    'tpl!taoProctoring/tpl/item-progress',\n    'tpl!taoProctoring/tpl/delivery-link',\n    'ui/datatable'\n], function (\n    $,\n    _,\n    __,\n    helpers,\n    moment,\n    loadingBar,\n    encode,\n    feedback,\n    dialog,\n    bulkActionPopup,\n    breadcrumbsFactory,\n    _status,\n    itemProgressTpl,\n    deliveryLinkTpl\n) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-monitoring';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Formats a time value to string\n     * @param {Number} time\n     * @returns {String}\n     * @private\n     */\n    var _timerFormat = function(time) {\n        return __('%d min', Math.floor(time / 60));\n    };\n\n    var notYet = function() {\n        dialog({\n            message: __('Not yet implemented!'),\n            autoRender: true,\n            autoDestroy: true,\n            buttons: 'ok'\n        });\n    };\n    \n    /**\n     * Controls the taoProctoring delivery page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $content = $container.find('.content');\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var categories = $container.data('categories');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var manageUrl = helpers._url('manage', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var terminateUrl = helpers._url('terminateExecutions', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var pauseUrl = helpers._url('pauseExecutions', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var authoriseUrl = helpers._url('authoriseExecutions', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var reportUrl = helpers._url('reportExecutions', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var serviceUrl = helpers._url('deliveryExecutions', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter : testCenterId});\n            var serviceAllUrl = helpers._url('allDeliveriesExecutions', 'Delivery', 'taoProctoring', {testCenter : testCenterId});\n            var tools = [];\n            var actions = [];\n            var model = [];\n            var actionButtons;\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // request the server with a selection of test takers\n            function request(url, selection, reason, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            execution: selection,\n                            reason: reason\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            }\n\n            // request the server to authorise the selected delivery executions\n            function authorise(selection) {\n                execBulkAction('authorize', __('Authorize Session'), selection, function(selection, reason){\n                    request(authoriseUrl, selection, reason, __('Sessions authorized'));\n                });\n            }\n\n            // request the server to pause the selected delivery executions\n            function pause(selection) {\n                execBulkAction('pause', __('Pause Session'), selection, function(selection, reason){\n                    request(pauseUrl, selection, reason, __('Sessions paused'));\n                });\n            }\n\n            // request the server to terminate the selected delivery executions\n            function terminate(selection) {\n                execBulkAction('terminate', __('Terminate Session'), selection, function(selection, reason){\n                    request(terminateUrl, selection, reason, __('Sessions terminated'));\n                });\n            }\n            \n            // report irregularities on the selected delivery executions\n            function report(selection) {\n                execBulkAction( 'report', __('Report Irregularity'), selection, function(selection, reason){\n                    request(reportUrl, selection, reason, __('Sessions reported'));\n                });\n            }\n            \n            /**\n             * Verify and reformat test taker data for the execBulkAction's need\n             * @param {Object} testTakerData\n             * @param {String} actionName\n             * @returns {Object}\n             */\n            function verifyTestTaker(testTakerData, actionName){\n                var formatted = {\n                    id : testTakerData.id,\n                    label : testTakerData.firstname+' '+testTakerData.lastname\n                };\n                var status = _status.getStatusByCode(testTakerData.state.status);\n                if(status){\n                    formatted.allowed = (status.can[actionName] === true);\n                    if(!formatted.allowed){\n                        formatted.reason = status.can[actionName];\n                    }\n                }\n                return formatted;\n            }\n            \n            /**\n             * Find the execution row data from its uri\n             * \n             * @param {String} uri\n             * @returns {Object}\n             */\n            function getExecutionData(uri){\n                return _.find(dataset.data, {id : uri});\n            }\n            \n            /**\n             * Exec \n             * @param {String} actionName\n             * @param {String} actionTitle\n             * @param {Array|String} selection\n             * @param {Function} cb\n             * @returns {undefined}\n             */\n            function execBulkAction(actionName, actionTitle, selection, cb){\n\n                var allowedTestTakers = [];\n                var forbiddenTestTakers = [];\n                var _selection = _.isArray(selection) ? selection : [selection];\n                var askForReason = (categories[actionName] && categories[actionName].categoriesDefinitions && categories[actionName].categoriesDefinitions.length);\n                \n                _.each(_selection, function(uri){\n                    var testTaker = getExecutionData(uri);\n                    var checkedTestTaker;\n                    if(testTaker){\n                        checkedTestTaker = verifyTestTaker(testTaker, actionName);\n                        if(checkedTestTaker.allowed){\n                            allowedTestTakers.push(checkedTestTaker);\n                        }else{\n                            forbiddenTestTakers.push(checkedTestTaker);\n                        }\n                    }\n                });\n                var config = _.assign({\n                    renderTo : $content,\n                    actionName : actionTitle,\n                    reason : askForReason,\n                    resourceType : 'test taker',\n                    allowedResources : allowedTestTakers,\n                    deniedResources : forbiddenTestTakers\n                }, categories[actionName]);\n                \n                bulkActionPopup(config).on('ok', function(reason){\n                    //execute callback\n                    if(_.isFunction(cb)){\n                        cb(_selection, reason);\n                    }\n                });\n            }\n\n            // tool: page refresh\n            tools.push({\n                id: 'refresh',\n                icon: 'reset',\n                title: __('Refresh the page'),\n                label: __('Refresh'),\n                action: function() {\n                    $list.datatable('refresh');\n                }\n            });\n\n            // tool: manage test takers (only for unique delivery)\n            if (deliveryId) {\n                tools.push({\n                    id: 'manage',\n                    icon: 'property-advanced',\n                    title: __('Manage sessions'),\n                    label: __('Manage'),\n                    action: function() {\n                        location.href = manageUrl;\n                    }\n                });\n            }\n\n            // tool: authorise the executions\n            tools.push({\n                id: 'authorise',\n                icon: 'play',\n                title: __('Authorize sessions'),\n                label: __('Authorise'),\n                massAction: true,\n                action: authorise\n            });\n\n            // tool: pause the executions\n            tools.push({\n                id: 'pause',\n                icon: 'pause',\n                title: __('Pause sessions'),\n                label: __('Pause'),\n                massAction: true,\n                action: pause\n            });\n\n            // tool: terminate the executions\n            tools.push({\n                id: 'terminate',\n                icon: 'stop',\n                title: __('Terminate sessions'),\n                label: __('Terminate'),\n                massAction: true,\n                action: terminate\n            });\n\n            // tool: report irregularities\n            tools.push({\n                id: 'irregularity',\n                icon: 'delivery-small',\n                title: __('Report irregularities'),\n                label: __('Report'),\n                massAction: true,\n                action: report\n            });\n\n            // action: authorise the execution\n            actions.push({\n                id: 'authorise',\n                icon: 'play',\n                title: __('Authorize session'),\n                hidden: function() {\n                    var status;\n                    if(this.state && this.state.status){\n                        status = _status.getStatusByCode(this.state.status);\n                        return !status || status.can.authorize !== true;\n                    }\n                    return true;\n                },\n                action: authorise\n            });\n\n            // action: pause the execution\n            actions.push({\n                id: 'pause',\n                icon: 'pause',\n                title: __('Pause session'),\n                hidden: function() {\n                    var status;\n                    if(this.state && this.state.status){\n                        status = _status.getStatusByCode(this.state.status);\n                        return !status || status.can.pause !== true;\n                    }\n                    return true;\n                },\n                action: pause\n            });\n\n            // action: terminate the execution\n            actions.push({\n                id: 'terminate',\n                icon: 'stop',\n                title: __('Terminate session'),\n                hidden: function() {\n                    var status;\n                    if(this.state && this.state.status){\n                        status = _status.getStatusByCode(this.state.status);\n                        return !status || status.can.terminate !== true;\n                    }\n                    return true;\n                },\n                action: terminate\n            });\n\n            // action: report irregularities\n            actions.push({\n                id: 'irregularity',\n                icon: 'delivery-small',\n                title: __('Report irregularity'),\n                hidden: function() {\n                    var status;\n                    if(this.state && this.state.status){\n                        status = _status.getStatusByCode(this.state.status);\n                        return !status || status.can.report !== true;\n                    }\n                    return true;\n                },\n                action: report\n            });\n\n            // column: delivery (only for all deliveries view)\n            if (!deliveryId) {\n                model.push({\n                    id: 'delivery',\n                    label: __('Session'),\n                    transform: function(value, row) {\n                        var delivery = row && row.delivery;\n                        if (delivery) {\n                            delivery.url = helpers._url('monitoring', 'Delivery', 'taoProctoring', {delivery : delivery.uri, testCenter : testCenterId});\n                            value = deliveryLinkTpl(delivery);\n                        }\n                        return value;\n\n                    }\n                });\n            }\n\n            // column: test taker first name\n            model.push({\n                id: 'firstname',\n                label: __('First name'),\n                transform: function(value, row) {\n                    return row && row.testTaker && row.testTaker.firstName || '';\n\n                }\n            });\n\n            // column: test taker last name\n            model.push({\n                id: 'lastname',\n                label: __('Last name'),\n                transform: function(value, row) {\n                    return row && row.testTaker && row.testTaker.lastName || '';\n\n                }\n            });\n\n            // column: test taker identifier\n            model.push({\n                id: 'identifier',\n                label: __('Identifier'),\n                transform: function(value, row) {\n                    return row && row.testTaker && row.testTaker.id || '';\n                }\n            });\n\n            // column: start time\n            model.push({\n                id: 'date',\n                label: __('Started at'),\n                transform: function(value) {\n                    return moment(value).toString();\n                }\n            });\n\n            // column: delivery execution status\n            model.push({\n                id: 'status',\n                label: __('Status'),\n                transform: function(value, row) {\n                    if(row && row.state && row.state.status){\n                        var status = _status.getStatusByCode(row.state.status);\n                        if(status){\n                            return status.label;\n                        }\n                    }\n                    return '';\n                }\n            });\n\n            // column: delivery execution progress\n            model.push({\n                id: 'progress',\n                label: __('Progress'),\n                transform: function(value, row) {\n                    var state = row && row.state;\n                    var item = state && state.item;\n                    var time = item && item.time;\n                    if (time && time.elapsed) {\n                        time.elapsedStr = _timerFormat(time.elapsed);\n                        time.totalStr = _timerFormat(time.total);\n                        time.display = !!(time.elapsedStr || time.totalStr);\n                    }\n                    return itemProgressTpl(state);\n                }\n            });\n            \n            // renders the datatable\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function(e, newDataset) {\n                    //update dateset in memory\n                    dataset = newDataset;\n                    \n                    //udate the buttons, which have been reconstructed\n                    actionButtons = _({\n                        authorize : $list.find('.action-bar').children('.tool-authorise'),\n                        pause : $list.find('.action-bar').children('.tool-pause'),\n                        terminate : $list.find('.action-bar').children('.tool-terminate'),\n                        report : $list.find('.action-bar').children('.tool-irregularity')\n                    });\n                    \n                    loadingBar.stop();\n                })\n                .on('select.datatable', function(e, newDataset) {\n                    //hide all controls then display each required one individually\n                    actionButtons.each(function($btn){\n                        $btn.hide();\n                    });\n                    _($list.datatable('selection')).map(function(uri){\n                        var row = getExecutionData(uri);\n                        return row.state.status;\n                    }).uniq().each(function(statusCode){\n                        var status = _status.getStatusByCode(statusCode);\n                        actionButtons.forIn(function($btn, action){\n                            if(status && status.can[action] === true){\n                                $btn.show();\n                            }\n                        });\n                    });\n                })\n                .datatable({\n                    url: deliveryId ? serviceUrl : serviceAllUrl,\n                    status: {\n                        empty: __('No sessions'),\n                        available: __('Current sessions'),\n                        loading: __('Loading')\n                    },\n                    tools: tools,\n                    actions: actions,\n                    model: model,\n                    selectable: true\n                }, dataset);\n                \n        }\n    };\n\n    return proctorDeliveryIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Delivery/testTakers',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-testtakers';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery test takers assign page\n     *\n     * @type {Object}\n     */\n    var proctorDeliveryAssignCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var deliveryId = $container.data('delivery');\n            var testCenterId = $container.data('testcenter');\n            var serviceUrl = helpers._url('availableTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n            var assignUrl = helpers._url('assignTestTakers', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n            var managerUrl = helpers._url('manage', 'Delivery', 'taoProctoring', {delivery : deliveryId, testCenter: testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // send the selection to the server and redirect to the index page\n            var assign = function(selection) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: assignUrl,\n                        data: {\n                            testtaker: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            feedback().success(__('Test takers have been added'));\n                            location.href = managerUrl;\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function(event, response) {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No available test takers to assign'),\n                        available: __('Available test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'back',\n                        icon: 'left',\n                        title: __('Return to the session manager'),\n                        label: __('Back'),\n                        action: function() {\n                            location.href = managerUrl;\n                        }\n                    }, {\n                        id: 'refresh',\n                        icon: 'reset',\n                        title: __('Refresh the page'),\n                        label: __('Refresh'),\n                        action: function() {\n                            $list.datatable('refresh');\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the selected test takers to the session'),\n                        label: __('Assign the selected test takers'),\n                        massAction: true,\n                        action: function(selection) {\n                            assign(selection);\n                        }\n                    }],\n                    actions: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the test taker to the session'),\n                        action: function(id) {\n                            assign([id]);\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'identifier',\n                        label: __('Identifier')\n                    }]\n                }, dataset);\n        }\n    };\n\n    return proctorDeliveryAssignCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n * Keep duration of test-taker activity in localstorage\n */\n\ndefine('taoQtiTest/testRunner/resumingStrategy/keepAfterResume',[], function () {\n    'use strict';\n\n    /**\n     * @param {Object} options\n     * @param {string} options.accuracy - period of user status checking\n     */\n    var sessionStateFactory = function sessionStateFactory(options) {\n        var _storageKey = 'sessionState_active_for',\n            _accuracy,\n            _interval = null;\n\n        var sessionState = {\n\n            reset: function reset() {\n                _reset();\n            },\n\n            restart: function restart() {\n                _reset();\n                _start();\n            },\n\n            getDuration: function getDuration() {\n                return getLocalStorageData();\n            }\n        };\n\n        function _start() {\n            if (null !== _interval) {\n                throw new TypeError('Tracking is already started');\n            }\n            _interval = setInterval(function () {\n                setLocalStorageData(getLocalStorageData() + _accuracy);\n            }, _accuracy);\n        }\n\n        function _stop() {\n            clearInterval(_interval);\n            _interval = null;\n        }\n\n        function _reset() {\n            _stop();\n            clearLocalStorage();\n        }\n\n        function _init() {\n            _accuracy = options && options.accuracy || 1000;\n        }\n\n        _init();\n\n        /**\n         * Store duration in ms to local storage\n         * @param {*} val - data to be stored.\n         */\n        function setLocalStorageData(val) {\n            window.localStorage.setItem(_storageKey, val);\n        }\n\n        /**\n         * Get duration from local storage\n         * @returns {int} in ms\n         */\n        function getLocalStorageData() {\n            var data = window.localStorage.getItem(_storageKey),\n                result = JSON.parse(data) || 0;\n            return result;\n        }\n\n        /**\n         * Clear storage\n         */\n        function clearLocalStorage() {\n            window.localStorage.removeItem(_storageKey);\n        }\n\n        return sessionState;\n    };\n\n    return sessionStateFactory;\n});\n","\ndefine('tpl!taoProctoring/templates/deliveryServer/authorizationSuccess', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"success-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"icon-result-ok\\\"></span></span>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/DeliveryServer/awaiting',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'helpers',\n    'moment',\n    'layout/loading-bar',\n    'ui/listbox',\n    'ui/dialog/alert',\n    'core/polling',\n    'taoQtiTest/testRunner/resumingStrategy/keepAfterResume',\n    'tpl!taoProctoring/templates/deliveryServer/authorizationSuccess'\n], function (_, $, __, helpers, moment, loadingBar, listBox, dialogAlert, polling, keepAfterResume, authSuccessTpl){\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 10 * 1000; // once every 10 seconds\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.awaiting-authorization';\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {Object}\n     */\n    var awaitingAuthorizationCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start(config){\n\n            var $container = $(cssScope);\n            var isAuthorizedUrl = helpers._url('isAuthorized', 'DeliveryServer', 'taoProctoring', {deliveryExecution : config.deliveryExecution});\n            var runDeliveryUrl = helpers._url('runDeliveryExecution', 'DeliveryServer', 'taoProctoring', {deliveryExecution : config.deliveryExecution});\n            var boxes = [{\n                    id : 'goToDelivery',\n                    label : config.deliveryLabel,\n                    url : runDeliveryUrl,\n                    content : __('Please wait, authorization in process ...'),\n                    text : __('Proceed')\n                }];\n            var list = listBox({\n                title : config.deliveryInit ? __('Start Test') : __('Resume Test'),\n                textEmpty : '',\n                textNumber : '',\n                textLoading : '',\n                renderTo : $container,\n                list : boxes,\n                width : 12\n            });\n            var $content = $container.find('.listbox .content');\n\n            // we need to reset the local timer to avoid loss of time inside the assessment test session\n            keepAfterResume().reset();\n\n            loadingBar.start();\n\n            polling({\n                action : function (){\n                    var async = this.async();\n                    $.get(isAuthorizedUrl, function(result){\n                        var stop = false;\n\n                        if (!result.success) {\n                            stop = true;\n                            if (result.message) {\n                                dialogAlert(result.message, exit);\n                            } else {\n                                exit();\n                            }\n                        } else if (result.authorized) {\n                            stop = true;\n                            authorized();\n                        }\n\n                        if (stop) {\n                            async.reject();\n                        } else {\n                            async.resolve();\n                        }\n                    });\n                },\n                interval : refreshPolling,\n                autoStart : true\n            });\n            \n            /**\n             * Function to be called when the delivery execution has been authorized\n             */\n            function authorized(){\n                loadingBar.stop();\n                //@todo it would be nice to smoothen the transition\n                $container.removeClass('authorization-in-progress');\n                $content.html(authSuccessTpl({message : __('Authorized, you may proceed')}));\n            }\n\n            /**\n             * Goes back to the delivery index\n             */\n            function exit() {\n                location.href = config.returnUrl;\n            }\n        }\n    };\n\n    return awaitingAuthorizationCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Diagnostic/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'moment',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable'\n], function ($, __, helpers, moment, loadingBar, encode, feedback, dialog, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.diagnostic-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring readiness check page\n     *\n     * @type {Object}\n     */\n    var taoProctoringDiagnosticCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var testCenterId = $container.data('testCenter');\n            var removeUrl = helpers._url('remove', 'Diagnostic', 'taoProctoring', {testCenter : testCenterId});\n            var serviceUrl = helpers._url('index', 'Diagnostic', 'taoProctoring', {testCenter : testCenterId});\n\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // request the server with a selection of readiness check results\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            report: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            var notYet = function() {\n                dialog({\n                    message: __('Not yet implemented!'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: 'ok'\n                });\n            };\n\n            // request the server to remove the selected diagnostic-index\n            var remove = function(selection) {\n                notYet();\n                //request(removeUrl, selection, __('The readiness check result have been removed'));\n            };\n            \n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No readiness checks have been done!'),\n                        available: __('Readiness checks already done'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'launch',\n                        icon: 'play',\n                        title: __('Launch another readiness check'),\n                        label: __('Launch readiness check'),\n                        action: function() {\n                            notYet();\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected readiness check results'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The selected readiness check results will be removed. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the readiness check result?'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The readiness check result will be removed. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'workstation',\n                        label: __('Workstation')\n                    }, {\n                        id: 'os',\n                        label: __('OS')\n                    }, {\n                        id: 'browser',\n                        label: __('Browser')\n                    }, {\n                        id: 'performance',\n                        label: __('Performance')\n                    }, {\n                        id: 'bandwidth',\n                        label: __('Bandwidth'),\n                        transform: function(value) {\n                            var bandwidth = value;\n\n                            if (value > 100) {\n                                bandwidth = '> 100';\n                            }\n\n                            return bandwidth + ' Mbs';\n                        }\n                    }, {\n                        id: 'date',\n                        label: __('Date'),\n                        transform: function(value) {\n                            return moment(value).toString();\n                        }\n                    }]\n                }, dataset);\n        }\n    };\n\n    return taoProctoringDiagnosticCtlr;\n});\n\n","\ndefine('tpl!taoProctoring/templates/reporting/datepicker', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<form class=\\\"datepicker\\\">\\n    <label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"From\", options) : helperMissing.call(depth0, \"__\", \"From\", options)))\n    + \"</label><input type=\\\"text\\\" name=\\\"periodStart\\\" value=\\\"\";\n  if (helper = helpers.start) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.start); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/><label>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"to\", options) : helperMissing.call(depth0, \"__\", \"to\", options)))\n    + \"</label><input type=\\\"text\\\" name=\\\"periodEnd\\\" value=\\\"\";\n  if (helper = helpers.end) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.end); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n</form>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/Reporting/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'moment',\n    'tpl!taoProctoring/templates/reporting/datepicker',\n    'ui/feedback',\n    'ui/dialog',\n    'taoProctoring/component/breadcrumbs',\n    'ui/datatable',\n    'jqueryui',\n    'jquery.timePicker'\n], function ($, __, helpers, loadingBar, encode, moment, datepickerTpl, feedback, dialog, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.reporting-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring reporting-index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringReportCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var $list = $container.find('.list');\n            var crumbs = $container.data('breadcrumbs');\n            var dataset = $container.data('set');\n            var testCenterId = $container.data('testcenter');\n\t\t\tvar downloadUrl = helpers._url('download', 'Reporting', 'taoProctoring', {testCenter : testCenterId});\n            var serviceUrl = helpers._url('reports', 'Reporting', 'taoProctoring', {testCenter : testCenterId});\n            var bc = breadcrumbsFactory($container, crumbs);\n\n            // request the server with a selection of reports\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            report: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            var notYet = function() {\n                dialog({\n                    message: __('Not yet implemented!'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: 'ok'\n                });\n            };\n            \n            var today = moment().format('YYYY-MM-DD');\n            \n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    status: {\n                        empty: __('No reports to display!'),\n                        available: __('Available reports'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'download',\n                        icon: 'download',\n                        title: __('Download the selected reports to a CSV file'),\n                        label: __('Download CSV'),\n                        action: function() {\n                            notYet();\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'delivery',\n                        label: __('Test')\n                    }, {\n                        id: 'testtaker',\n                        label: __('Test Taker')\n                    }, {\n                        id: 'proctor',\n                        label: __('Proctor')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }, {\n                        id: 'start',\n                        label: __('Start'),\n                        transform: function(value) {\n                            return moment(value).toString();\n                        }\n                    }, {\n                        id: 'end',\n                        label: __('End'),\n                        transform: function(value) {\n                            return moment(value).toString();\n                        }\n                    }, {\n                        id: 'pause',\n                        label: __('Pause #')\n                    }, {\n                        id: 'resume',\n                        label: __('Resume #')\n                    }, {\n                        id: 'irregularities',\n                        label: __('Irregularities')\n                    }],\n                    params:{\n                        periodStart : today,\n                        periodEnd : today\n                    }\n                }, dataset);\n            \n            //init date range picker\n            dateRangePicker(today, $container, $list);\n        }\n    };\n    \n    /**\n     * Create a data range picker for reporting index\n     * \n     * @param {JQuery} $container\n     * @param {JQuery} $list\n     */\n    function dateRangePicker(date, $container, $list){\n        \n        var $panel = $container.find('.panel');\n        var periodStart = date;\n        var periodEnd = date;\n        $panel.append(datepickerTpl({\n            start : periodStart,\n            end : periodEnd\n        }));\n        \n        var $periodStart = $panel.find('input[name=periodStart]');\n        var $periodEnd = $panel.find('input[name=periodEnd]');\n        $periodStart.datepicker({\n            dateFormat: 'yy-mm-dd',\n            autoSize: true\n        }).change(function(){\n            periodStart = $periodStart.val();\n            $periodEnd.datepicker('option', 'minDate', periodStart);\n            refresh();\n        });\n        $periodEnd.datepicker({\n            dateFormat: 'yy-mm-dd',\n            autoSize: true\n        }).change(function(){\n            periodEnd = $periodEnd.val();\n            $periodStart.datepicker('option', 'maxDate', periodEnd);\n            refresh();\n        });\n        \n        /**\n         * Refresh the data table with new date range \n         * @returns {undefined}\n         */\n        function refresh(){\n            $list.datatable('options', {\n                params:\n                    {\n                        periodStart : periodStart,\n                        periodEnd : periodEnd\n                    }\n            }).datatable('refresh');\n        }\n    }\n    \n    return taoProctoringReportCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/TestCenter/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'taoProctoring/component/breadcrumbs'\n], function ($, __, helpers, loadingBar, listBox, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.testcenters-index';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring index page\n     *\n     * @type {Object}\n     */\n    var taoProctoringIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var boxes = $container.data('list');\n            var crumbs = $container.data('breadcrumbs');\n            var list = listBox({\n                title: __(\"My Test sites\"),\n                textEmpty: __(\"No test site available\"),\n                textNumber: __(\"Available\"),\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true\n            });\n            var bc = breadcrumbsFactory($container, crumbs);\n            var serviceUrl = helpers._url('index', 'TestCenter', 'taoProctoring');\n            var pollTo = null;\n\n            // update the index from a JSON array\n            var update = function(boxes) {\n                if (pollTo) {\n                    clearTimeout(pollTo);\n                    pollTo = null;\n                }\n\n                list.update(boxes);\n                loadingBar.stop();\n\n                // poll the server at regular interval to refresh the index\n                if (refreshPolling) {\n                    pollTo = setTimeout(refresh, refreshPolling);\n                }\n            };\n\n            // refresh the index\n            var refresh = function() {\n                loadingBar.start();\n                list.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(response) {\n                    boxes = response && response.list;\n                    update(boxes);\n                });\n            };\n\n            if (!boxes) {\n                refresh();\n            } else {\n                update(boxes);\n            }\n        }\n    };\n\n    return taoProctoringIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/TestCenter/testCenter',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'ui/listbox',\n    'taoProctoring/component/breadcrumbs'\n], function ($, __, helpers, loadingBar, listBox, breadcrumbsFactory) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.testcenters-testcenter';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring test site page\n     *\n     * @type {Object}\n     */\n    var taoProctoringTestSiteCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $container = $(cssScope);\n            var boxes = $container.data('list');\n            var crumbs = $container.data('breadcrumbs');\n            var id = $container.data('id');\n            var title = $container.data('title');\n            var list = listBox({\n                title: title,\n                textEmpty: false,\n                textNumber: false,\n                textLoading: __(\"Loading\"),\n                renderTo: $container.find('.content'),\n                replace: true,\n                width: 4\n            });\n            var bc = breadcrumbsFactory($container, crumbs);\n            var serviceUrl = helpers._url('testCenter', 'TestCenter', 'taoProctoring');\n\n            // update the index from a JSON array\n            var update = function(boxes) {\n                list.update(boxes);\n                loadingBar.stop();\n            };\n\n            // refresh the index\n            var refresh = function() {\n                loadingBar.start();\n                list.setLoading(true);\n\n                $.ajax({\n                    url: serviceUrl,\n                    cache: false,\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(response) {\n                    boxes = response && response.list;\n                    update(boxes);\n                });\n            };\n\n            if (!boxes) {\n                refresh();\n            } else {\n                update(boxes);\n            }\n        }\n    };\n\n    return taoProctoringTestSiteCtlr;\n});\n\n"]}